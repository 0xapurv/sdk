parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(WrapperClass, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, WrapperClass)
        parseClass(WrapperClass, class, class, WrapperClass)
          parseClassHeaderOpt(WrapperClass, class, class)
            parseClassExtendsOpt(WrapperClass)
              listener: handleNoType(WrapperClass)
              listener: handleClassExtends(null)
            parseWithClauseOpt(WrapperClass)
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt(WrapperClass)
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(WrapperClass, DeclarationKind.Class, WrapperClass)
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl({, DeclarationKind.Class, WrapperClass)
              parseMetadataStar({)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields({, null, null, null, null, null, {, Instance of 'SimpleType', assert, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(assert)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(assert, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
                  listener: handleIdentifier(assert, fieldDeclaration)
                parseFieldInitializerOpt(assert, assert, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', break, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(break)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(break, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
                  listener: handleIdentifier(break, fieldDeclaration)
                parseFieldInitializerOpt(break, break, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', case, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(case)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(case, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
                  listener: handleIdentifier(case, fieldDeclaration)
                parseFieldInitializerOpt(case, case, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', catch, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(catch)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(catch, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
                  listener: handleIdentifier(catch, fieldDeclaration)
                parseFieldInitializerOpt(catch, catch, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', class, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(class)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(class, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
                  listener: handleIdentifier(class, fieldDeclaration)
                parseFieldInitializerOpt(class, class, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', const, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(const)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  insertSyntheticIdentifier(int, fieldDeclaration, message: null, messageOnToken: null)
                    reportRecoverableError(const, Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
                    rewriter()
                  listener: handleIdentifier(, fieldDeclaration)
                parseFieldInitializerOpt(, , null, null, DeclarationKind.Class, WrapperClass)
                  listener: handleNoFieldInitializer(const)
                ensureSemicolon()
                  reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], const, const)
                  rewriter()
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, const)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(const)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(const, ;, null, null, null, null, const, const, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                parseInvalidOperatorDeclaration(;, null, null, null, null, const, const, DeclarationKind.Class, WrapperClass)
                  reportRecoverableError(=, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, =, =)
                  rewriter()
                  parseMethod(;, null, null, null, null, const, const, Instance of 'NoType', null, operator, DeclarationKind.Class, WrapperClass)
                    listener: beginMethod(null, null, null, const, null, operator)
                    listener: handleNoType(const)
                    parseOperatorName(const)
                      isUnaryMinus(=)
                      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
                        listener: handleRecoverableError(Message[InvalidOperator, The string '=' isn't a user-definable operator., null, {token: =}], =, =)
                      listener: handleInvalidOperatorName(operator, =)
                    parseMethodTypeVar(=)
                      listener: handleNoTypeVariables(42)
                    parseGetterOrFormalParameters(=, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(=, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, =, =)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                        reportRecoverableError(42, Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}])
                          listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}], 42, 42)
                        insertBlock())
                          rewriter()
                          rewriter()
                      listener: handleInvalidFunctionBody({)
                    reportRecoverableError(const, ConstMethod)
                      listener: handleRecoverableError(ConstMethod, const, const)
                    listener: endClassMethod(null, const, (, null, })
                  listener: endMember()
            notEofOrValue(}, 42)
            parseClassOrMixinOrExtensionMemberImpl(}, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(})
                listener: beginMetadataStar(42)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(42, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got '42'., null, {token: 42}], 42, 42)
                listener: handleInvalidMember(42)
                listener: endMember()
            notEofOrValue(}, ;)
            parseClassOrMixinOrExtensionMemberImpl(42, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(42)
                listener: beginMetadataStar(;)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(42, 42, null, null, null, null, null, 42, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got ';'., null, {token: ;}], ;, ;)
                listener: handleInvalidMember(;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', continue, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(continue)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(continue, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
                  listener: handleIdentifier(continue, fieldDeclaration)
                parseFieldInitializerOpt(continue, continue, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', default, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(default)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(default, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
                  listener: handleIdentifier(default, fieldDeclaration)
                parseFieldInitializerOpt(default, default, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', do, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(do)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(do, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
                  listener: handleIdentifier(do, fieldDeclaration)
                parseFieldInitializerOpt(do, do, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', else, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(else)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(else, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
                  listener: handleIdentifier(else, fieldDeclaration)
                parseFieldInitializerOpt(else, else, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', enum, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(enum)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(enum, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
                  listener: handleIdentifier(enum, fieldDeclaration)
                parseFieldInitializerOpt(enum, enum, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', extends, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(extends)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
                  listener: handleIdentifier(extends, fieldDeclaration)
                parseFieldInitializerOpt(extends, extends, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', false, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(false)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(false, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
                  listener: handleIdentifier(false, fieldDeclaration)
                parseFieldInitializerOpt(false, false, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', final, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(final)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  insertSyntheticIdentifier(int, fieldDeclaration, message: null, messageOnToken: null)
                    reportRecoverableError(final, Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
                    rewriter()
                  listener: handleIdentifier(, fieldDeclaration)
                parseFieldInitializerOpt(, , null, null, DeclarationKind.Class, WrapperClass)
                  listener: handleNoFieldInitializer(final)
                ensureSemicolon()
                  reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], final, final)
                  rewriter()
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, final)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(final)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(final, ;, null, null, null, null, final, final, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                parseInvalidOperatorDeclaration(;, null, null, null, null, final, final, DeclarationKind.Class, WrapperClass)
                  reportRecoverableError(=, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, =, =)
                  rewriter()
                  parseMethod(;, null, null, null, null, final, final, Instance of 'NoType', null, operator, DeclarationKind.Class, WrapperClass)
                    reportRecoverableErrorWithToken(final, Instance of 'Template<(Token) => Message>')
                      listener: handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'final' here., Try removing 'final'., {token: final}], final, final)
                    listener: beginMethod(null, null, null, null, null, operator)
                    listener: handleNoType(final)
                    parseOperatorName(final)
                      isUnaryMinus(=)
                      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
                        listener: handleRecoverableError(Message[InvalidOperator, The string '=' isn't a user-definable operator., null, {token: =}], =, =)
                      listener: handleInvalidOperatorName(operator, =)
                    parseMethodTypeVar(=)
                      listener: handleNoTypeVariables(42)
                    parseGetterOrFormalParameters(=, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(=, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, =, =)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                        reportRecoverableError(42, Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}])
                          listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}], 42, 42)
                        insertBlock())
                          rewriter()
                          rewriter()
                      listener: handleInvalidFunctionBody({)
                    listener: endClassMethod(null, final, (, null, })
                  listener: endMember()
            notEofOrValue(}, 42)
            parseClassOrMixinOrExtensionMemberImpl(}, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(})
                listener: beginMetadataStar(42)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(42, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got '42'., null, {token: 42}], 42, 42)
                listener: handleInvalidMember(42)
                listener: endMember()
            notEofOrValue(}, ;)
            parseClassOrMixinOrExtensionMemberImpl(42, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(42)
                listener: beginMetadataStar(;)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(42, 42, null, null, null, null, null, 42, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got ';'., null, {token: ;}], ;, ;)
                listener: handleInvalidMember(;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', finally, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(finally)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(finally, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
                  listener: handleIdentifier(finally, fieldDeclaration)
                parseFieldInitializerOpt(finally, finally, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', for, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(for)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(for, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
                  listener: handleIdentifier(for, fieldDeclaration)
                parseFieldInitializerOpt(for, for, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', if, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(if)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(if, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
                  listener: handleIdentifier(if, fieldDeclaration)
                parseFieldInitializerOpt(if, if, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', in, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(in)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(in, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
                  listener: handleIdentifier(in, fieldDeclaration)
                parseFieldInitializerOpt(in, in, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', is, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(is)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(is, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
                  listener: handleIdentifier(is, fieldDeclaration)
                parseFieldInitializerOpt(is, is, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', new, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(new)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(new, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
                  listener: handleIdentifier(new, fieldDeclaration)
                parseFieldInitializerOpt(new, new, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', null, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(null)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(null, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
                  listener: handleIdentifier(null, fieldDeclaration)
                parseFieldInitializerOpt(null, null, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', rethrow, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(rethrow)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(rethrow, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
                  listener: handleIdentifier(rethrow, fieldDeclaration)
                parseFieldInitializerOpt(rethrow, rethrow, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', return, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(return)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(return, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
                  listener: handleIdentifier(return, fieldDeclaration)
                parseFieldInitializerOpt(return, return, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', super, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(super)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(super, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
                  listener: handleIdentifier(super, fieldDeclaration)
                parseFieldInitializerOpt(super, super, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', switch, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(switch)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(switch, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
                  listener: handleIdentifier(switch, fieldDeclaration)
                parseFieldInitializerOpt(switch, switch, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(int, ;, null, null, null, null, null, ;, Instance of 'SimpleType', null, DeclarationKind.Class, WrapperClass)
                parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', this, DeclarationKind.Class, WrapperClass)
                  listener: handleIdentifier(int, typeReference)
                  listener: handleNoTypeArguments(this)
                  listener: handleType(int, null)
                  ensureIdentifier(int, fieldDeclaration)
                    reportRecoverableErrorWithToken(this, Instance of 'Template<(Token) => Message>')
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
                    listener: handleIdentifier(this, fieldDeclaration)
                  parseFieldInitializerOpt(this, this, null, null, DeclarationKind.Class, WrapperClass)
                    listener: beginFieldInitializer(=)
                    parseExpression(=)
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(42)
                    listener: endFieldInitializer(=, ;)
                  listener: endClassFields(null, null, null, null, 1, int, ;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', throw, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(throw)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(throw, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
                  listener: handleIdentifier(throw, fieldDeclaration)
                parseFieldInitializerOpt(throw, throw, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', true, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(true)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(true, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
                  listener: handleIdentifier(true, fieldDeclaration)
                parseFieldInitializerOpt(true, true, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', try, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(try)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(try, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
                  listener: handleIdentifier(try, fieldDeclaration)
                parseFieldInitializerOpt(try, try, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', var, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(var)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  insertSyntheticIdentifier(int, fieldDeclaration, message: null, messageOnToken: null)
                    reportRecoverableError(var, Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
                    rewriter()
                  listener: handleIdentifier(, fieldDeclaration)
                parseFieldInitializerOpt(, , null, null, DeclarationKind.Class, WrapperClass)
                  listener: handleNoFieldInitializer(var)
                ensureSemicolon()
                  reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], var, var)
                  rewriter()
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, var)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(var)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(var, ;, null, null, null, null, var, var, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                parseInvalidOperatorDeclaration(;, null, null, null, null, var, var, DeclarationKind.Class, WrapperClass)
                  reportRecoverableError(=, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, =, =)
                  rewriter()
                  parseMethod(;, null, null, null, null, var, var, Instance of 'NoType', null, operator, DeclarationKind.Class, WrapperClass)
                    reportRecoverableError(var, VarReturnType)
                      listener: handleRecoverableError(VarReturnType, var, var)
                    listener: beginMethod(null, null, null, null, null, operator)
                    listener: handleNoType(var)
                    parseOperatorName(var)
                      isUnaryMinus(=)
                      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
                        listener: handleRecoverableError(Message[InvalidOperator, The string '=' isn't a user-definable operator., null, {token: =}], =, =)
                      listener: handleInvalidOperatorName(operator, =)
                    parseMethodTypeVar(=)
                      listener: handleNoTypeVariables(42)
                    parseGetterOrFormalParameters(=, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(=, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, =, =)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                        reportRecoverableError(42, Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}])
                          listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}], 42, 42)
                        insertBlock())
                          rewriter()
                          rewriter()
                      listener: handleInvalidFunctionBody({)
                    listener: endClassMethod(null, var, (, null, })
                  listener: endMember()
            notEofOrValue(}, 42)
            parseClassOrMixinOrExtensionMemberImpl(}, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(})
                listener: beginMetadataStar(42)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(42, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got '42'., null, {token: 42}], 42, 42)
                listener: handleInvalidMember(42)
                listener: endMember()
            notEofOrValue(}, ;)
            parseClassOrMixinOrExtensionMemberImpl(42, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(42)
                listener: beginMetadataStar(;)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(42, 42, null, null, null, null, null, 42, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got ';'., null, {token: ;}], ;, ;)
                listener: handleInvalidMember(;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', void, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(void)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  insertSyntheticIdentifier(int, fieldDeclaration, message: null, messageOnToken: null)
                    reportRecoverableError(void, Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}])
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
                    rewriter()
                  listener: handleIdentifier(, fieldDeclaration)
                parseFieldInitializerOpt(, , null, null, DeclarationKind.Class, WrapperClass)
                  listener: handleNoFieldInitializer(void)
                ensureSemicolon()
                  reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
                    listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
                  rewriter()
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, void)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(void)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(void, ;, null, null, null, null, null, ;, Instance of 'VoidType', null, DeclarationKind.Class, WrapperClass)
                parseInvalidOperatorDeclaration(;, null, null, null, null, null, ;, DeclarationKind.Class, WrapperClass)
                  reportRecoverableError(=, MissingOperatorKeyword)
                    listener: handleRecoverableError(MissingOperatorKeyword, =, =)
                  rewriter()
                  parseMethod(;, null, null, null, null, null, ;, Instance of 'VoidType', null, operator, DeclarationKind.Class, WrapperClass)
                    listener: beginMethod(null, null, null, null, null, operator)
                    listener: handleVoidKeyword(void)
                    parseOperatorName(void)
                      isUnaryMinus(=)
                      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
                        listener: handleRecoverableError(Message[InvalidOperator, The string '=' isn't a user-definable operator., null, {token: =}], =, =)
                      listener: handleInvalidOperatorName(operator, =)
                    parseMethodTypeVar(=)
                      listener: handleNoTypeVariables(42)
                    parseGetterOrFormalParameters(=, operator, false, MemberKind.NonStaticMethod)
                      missingParameterMessage(MemberKind.NonStaticMethod)
                      reportRecoverableError(=, MissingMethodParameters)
                        listener: handleRecoverableError(MissingMethodParameters, =, =)
                      rewriter()
                      parseFormalParametersRest((, MemberKind.NonStaticMethod)
                        listener: beginFormalParameters((, MemberKind.NonStaticMethod)
                        listener: endFormalParameters(0, (, ), MemberKind.NonStaticMethod)
                    parseInitializersOpt())
                      listener: handleNoInitializers()
                    parseAsyncModifierOpt())
                      listener: handleAsyncModifier(null, null)
                      inPlainSync()
                    inPlainSync()
                    parseFunctionBody(), false, true)
                      ensureBlock(), Instance of 'Template<(Token) => Message>', null)
                        reportRecoverableError(42, Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}])
                          listener: handleRecoverableError(Message[ExpectedFunctionBody, Expected a function body, but got '42'., null, {token: 42}], 42, 42)
                        insertBlock())
                          rewriter()
                          rewriter()
                      listener: handleInvalidFunctionBody({)
                    listener: endClassMethod(null, void, (, null, })
                  listener: endMember()
            notEofOrValue(}, 42)
            parseClassOrMixinOrExtensionMemberImpl(}, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(})
                listener: beginMetadataStar(42)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(}, }, null, null, null, null, null, }, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(42, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got '42'., null, {token: 42}], 42, 42)
                listener: handleInvalidMember(42)
                listener: endMember()
            notEofOrValue(}, ;)
            parseClassOrMixinOrExtensionMemberImpl(42, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(42)
                listener: beginMetadataStar(;)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(42, 42, null, null, null, null, null, 42, Instance of 'NoType', null, DeclarationKind.Class, WrapperClass)
                reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
                  listener: handleRecoverableError(Message[ExpectedClassMember, Expected a class member, but got ';'., null, {token: ;}], ;, ;)
                listener: handleInvalidMember(;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', while, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(while)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(while, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
                  listener: handleIdentifier(while, fieldDeclaration)
                parseFieldInitializerOpt(while, while, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', with, DeclarationKind.Class, WrapperClass)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(with)
                listener: handleType(int, null)
                ensureIdentifier(int, fieldDeclaration)
                  reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
                  listener: handleIdentifier(with, fieldDeclaration)
                parseFieldInitializerOpt(with, with, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 45, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
