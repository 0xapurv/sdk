parseUnit(class)
  skipErrorTokens(class)
  listener: beginCompilationUnit(class)
  syntheticPreviousToken(class)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          listener: handleIdentifier(WrapperClass, classOrMixinDeclaration)
        listener: handleNoTypeVariables({)
        listener: beginClassDeclaration(class, null, WrapperClass)
        parseClass(WrapperClass, class, class, WrapperClass)
          parseClassHeaderOpt(WrapperClass, class, class)
            parseClassExtendsOpt(WrapperClass)
              listener: handleNoType(WrapperClass)
              listener: handleClassExtends(null)
            parseWithClauseOpt(WrapperClass)
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt(WrapperClass)
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassOrMixinOrExtensionBody(WrapperClass, DeclarationKind.Class, WrapperClass)
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl({, DeclarationKind.Class, WrapperClass)
              parseMetadataStar({)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(assert)
              indicatesMethodOrField(=)
              parseFields({, null, null, null, null, null, {, Instance of 'SimpleType', assert, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(assert)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(assert, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
                  listener: handleIdentifier(assert, fieldDeclaration)
                parseFieldInitializerOpt(assert, assert, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(break)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', break, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(break)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(break, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
                  listener: handleIdentifier(break, fieldDeclaration)
                parseFieldInitializerOpt(break, break, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(case)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', case, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(case)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(case, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
                  listener: handleIdentifier(case, fieldDeclaration)
                parseFieldInitializerOpt(case, case, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(catch)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', catch, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(catch)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(catch, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
                  listener: handleIdentifier(catch, fieldDeclaration)
                parseFieldInitializerOpt(catch, catch, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(class)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', class, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(class)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(class, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
                  listener: handleIdentifier(class, fieldDeclaration)
                parseFieldInitializerOpt(class, class, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(const)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', const, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(const)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(const, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
                  listener: handleIdentifier(const, fieldDeclaration)
                parseFieldInitializerOpt(const, const, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(continue)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', continue, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(continue)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(continue, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
                  listener: handleIdentifier(continue, fieldDeclaration)
                parseFieldInitializerOpt(continue, continue, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(default)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', default, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(default)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(default, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
                  listener: handleIdentifier(default, fieldDeclaration)
                parseFieldInitializerOpt(default, default, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(do)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', do, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(do)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(do, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
                  listener: handleIdentifier(do, fieldDeclaration)
                parseFieldInitializerOpt(do, do, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(else)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', else, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(else)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(else, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
                  listener: handleIdentifier(else, fieldDeclaration)
                parseFieldInitializerOpt(else, else, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(enum)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', enum, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(enum)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(enum, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
                  listener: handleIdentifier(enum, fieldDeclaration)
                parseFieldInitializerOpt(enum, enum, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(extends)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', extends, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(extends)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
                  listener: handleIdentifier(extends, fieldDeclaration)
                parseFieldInitializerOpt(extends, extends, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(false)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', false, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(false)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(false, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
                  listener: handleIdentifier(false, fieldDeclaration)
                parseFieldInitializerOpt(false, false, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(final)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', final, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(final)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(final, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
                  listener: handleIdentifier(final, fieldDeclaration)
                parseFieldInitializerOpt(final, final, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(finally)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', finally, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(finally)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(finally, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
                  listener: handleIdentifier(finally, fieldDeclaration)
                parseFieldInitializerOpt(finally, finally, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(for)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', for, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(for)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(for, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
                  listener: handleIdentifier(for, fieldDeclaration)
                parseFieldInitializerOpt(for, for, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(if)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', if, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(if)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(if, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
                  listener: handleIdentifier(if, fieldDeclaration)
                parseFieldInitializerOpt(if, if, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(in)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', in, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(in)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(in, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
                  listener: handleIdentifier(in, fieldDeclaration)
                parseFieldInitializerOpt(in, in, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(is)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', is, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(is)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(is, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
                  listener: handleIdentifier(is, fieldDeclaration)
                parseFieldInitializerOpt(is, is, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(new)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', new, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(new)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(new, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
                  listener: handleIdentifier(new, fieldDeclaration)
                parseFieldInitializerOpt(new, new, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(null)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', null, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(null)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(null, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
                  listener: handleIdentifier(null, fieldDeclaration)
                parseFieldInitializerOpt(null, null, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(rethrow)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', rethrow, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(rethrow)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(rethrow, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
                  listener: handleIdentifier(rethrow, fieldDeclaration)
                parseFieldInitializerOpt(rethrow, rethrow, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(return)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', return, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(return)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(return, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
                  listener: handleIdentifier(return, fieldDeclaration)
                parseFieldInitializerOpt(return, return, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(super)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', super, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(super)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(super, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
                  listener: handleIdentifier(super, fieldDeclaration)
                parseFieldInitializerOpt(super, super, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(switch)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', switch, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(switch)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(switch, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
                  listener: handleIdentifier(switch, fieldDeclaration)
                parseFieldInitializerOpt(switch, switch, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              recoverFromInvalidMember(int, ;, null, null, null, null, null, ;, Instance of 'SimpleType', null, DeclarationKind.Class, WrapperClass)
                parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', this, DeclarationKind.Class, WrapperClass, false)
                  listener: handleIdentifier(int, typeReference)
                  listener: handleNoTypeArguments(this)
                  listener: handleType(int, null)
                  ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, false)
                    reportRecoverableErrorWithToken(this, Instance of 'Template<(Token) => Message>')
                      listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
                    listener: handleIdentifier(this, fieldDeclaration)
                  parseFieldInitializerOpt(this, this, null, null, DeclarationKind.Class, WrapperClass)
                    listener: beginFieldInitializer(=)
                    parseExpression(=)
                      parsePrecedenceExpression(=, 1, true)
                        parseUnaryExpression(=, true)
                          parsePrimary(=, expression)
                            parseLiteralInt(=)
                              listener: handleLiteralInt(42)
                    listener: endFieldInitializer(=, ;)
                  listener: endClassFields(null, null, null, null, 1, int, ;)
                listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(throw)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', throw, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(throw)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(throw, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
                  listener: handleIdentifier(throw, fieldDeclaration)
                parseFieldInitializerOpt(throw, throw, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(true)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', true, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(true)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(true, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
                  listener: handleIdentifier(true, fieldDeclaration)
                parseFieldInitializerOpt(true, true, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(try)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', try, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(try)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(try, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
                  listener: handleIdentifier(try, fieldDeclaration)
                parseFieldInitializerOpt(try, try, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(var)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', var, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(var)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(var, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
                  listener: handleIdentifier(var, fieldDeclaration)
                parseFieldInitializerOpt(var, var, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(void)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', void, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(void)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(void, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
                  listener: handleIdentifier(void, fieldDeclaration)
                parseFieldInitializerOpt(void, void, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(while)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', while, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(while)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(while, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
                  listener: handleIdentifier(while, fieldDeclaration)
                parseFieldInitializerOpt(while, while, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, int)
            parseClassOrMixinOrExtensionMemberImpl(;, DeclarationKind.Class, WrapperClass)
              parseMetadataStar(;)
                listener: beginMetadataStar(int)
                listener: endMetadataStar(0)
              listener: beginMember()
              isReservedKeyword(with)
              indicatesMethodOrField(=)
              parseFields(;, null, null, null, null, null, ;, Instance of 'SimpleType', with, DeclarationKind.Class, WrapperClass, true)
                listener: handleIdentifier(int, typeReference)
                listener: handleNoTypeArguments(with)
                listener: handleType(int, null)
                ensureIdentifierPotentiallyRecovered(int, fieldDeclaration, true)
                  reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
                    listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
                  listener: handleIdentifier(with, fieldDeclaration)
                parseFieldInitializerOpt(with, with, null, null, DeclarationKind.Class, WrapperClass)
                  listener: beginFieldInitializer(=)
                  parseExpression(=)
                    parsePrecedenceExpression(=, 1, true)
                      parseUnaryExpression(=, true)
                        parsePrimary(=, expression)
                          parseLiteralInt(=)
                            listener: handleLiteralInt(42)
                  listener: endFieldInitializer(=, ;)
                listener: endClassFields(null, null, null, null, 1, int, ;)
              listener: endMember()
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 33, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(class)
  listener: endCompilationUnit(1, )
