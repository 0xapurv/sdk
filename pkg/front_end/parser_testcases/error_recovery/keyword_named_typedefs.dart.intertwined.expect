parseUnit(typedef)
  skipErrorTokens(typedef)
  listener: beginCompilationUnit(typedef)
  syntheticPreviousToken(typedef)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(abstract, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'abstract' as a name here., null, {token: abstract}], abstract, abstract)
          listener: handleIdentifier(abstract, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(abstract, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(abstract, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'abstract' as a name here., null, {token: abstract}], abstract, abstract)
          listener: handleIdentifier(abstract, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(abstract, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(as, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'as' as a name here., null, {token: as}], as, as)
          listener: handleIdentifier(as, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(as, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(as, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'as' as a name here., null, {token: as}], as, as)
          listener: handleIdentifier(as, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(as, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(assert, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
          listener: handleIdentifier(assert, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(assert, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(assert, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
          listener: handleIdentifier(assert, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(assert, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(async, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(async, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(async, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(await, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(await, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(await, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(break, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
          listener: handleIdentifier(break, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(break, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(break, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
          listener: handleIdentifier(break, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(break, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(case, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
          listener: handleIdentifier(case, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(case, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(case, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
          listener: handleIdentifier(case, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(case, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(catch, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
          listener: handleIdentifier(catch, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(catch, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(catch, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
          listener: handleIdentifier(catch, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(catch, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], messageOnToken: null)
            reportRecoverableError(class, Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(class)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(class, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, class, class)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], class, class)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(;, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          reportRecoverableErrorWithToken((, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
          rewriter()
          listener: handleIdentifier(, classOrMixinDeclaration)
        listener: handleNoTypeVariables())
        listener: beginClassDeclaration(class, null, )
        parseClass(, class, class, )
          parseClassHeaderOpt(, class, class)
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassHeaderRecovery(, class, class)
            parseClassHeaderOpt(, class, class)
              parseClassExtendsOpt()
              parseWithClauseOpt()
              parseClassOrMixinImplementsOpt()
            skipUnexpectedTokenOpt(, [extends, with, implements, {])
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleRecoverClassHeader()
          ensureBlock(, null, class declaration)
            reportRecoverableError(, Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}], ), ))
            insertBlock()
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(, DeclarationKind.Class, )
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration())
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar())
      listener: endMetadataStar(0)
    listener: beginTopLevelMember())
    parseInvalidTopLevelDeclaration(})
      reportRecoverableErrorWithToken(), Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got ')'., null, {token: )}], ), ))
      listener: handleInvalidTopLevelDeclaration())
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(), Instance of 'DirectiveContext')
    parseMetadataStar())
      listener: beginMetadataStar(;)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(;)
    parseInvalidTopLevelDeclaration())
      reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[UnexpectedToken, Unexpected token ';'., null, {token: ;}], ;, ;)
      listener: handleInvalidTopLevelDeclaration(;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          insertSyntheticIdentifier(typedef, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], messageOnToken: null)
            reportRecoverableError(class, Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(class)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(class, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, class, class)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], class, class)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(class)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(class)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, class, Instance of 'DirectiveContext')
      parseClassDeclarationModifiers(;, class)
      parseClassOrNamedMixinApplication(null, class)
        listener: beginClassOrNamedMixinApplicationPrelude(class)
        ensureIdentifier(class, classOrMixinDeclaration)
          reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
          rewriter()
          listener: handleIdentifier(, classOrMixinDeclaration)
        listener: handleNoTypeVariables(void)
        listener: beginClassDeclaration(class, null, )
        parseClass(, class, class, )
          parseClassHeaderOpt(, class, class)
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleClassHeader(class, class, null)
          parseClassHeaderRecovery(, class, class)
            parseClassHeaderOpt(, class, class)
              parseClassExtendsOpt()
              parseWithClauseOpt()
              parseClassOrMixinImplementsOpt()
            skipUnexpectedTokenOpt(, [extends, with, implements, {])
            parseClassExtendsOpt()
              listener: handleNoType()
              listener: handleClassExtends(null)
            parseWithClauseOpt()
              listener: handleClassNoWithClause()
            parseClassOrMixinImplementsOpt()
              listener: handleClassOrMixinImplements(null, 0)
            listener: handleRecoverClassHeader()
          ensureBlock(, null, class declaration)
            reportRecoverableError(, Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}])
              listener: handleRecoverableError(Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}], void, void)
            insertBlock()
              rewriter()
              rewriter()
          parseClassOrMixinOrExtensionBody(, DeclarationKind.Class, )
            listener: beginClassOrMixinBody(DeclarationKind.Class, {)
            notEofOrValue(}, })
            listener: endClassOrMixinBody(DeclarationKind.Class, 0, {, })
          listener: endClassDeclaration(class, })
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, }, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(}, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], messageOnToken: null)
            reportRecoverableError(const, Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(const)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(const, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, const, const)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], const, const)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(const)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(const)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(const)
      insertSyntheticIdentifier(const, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
        rewriter()
      reportRecoverableErrorWithToken(const, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'const' here., Try removing 'const'., {token: const}], const, const)
      parseTopLevelMethod(;, null, const, Instance of 'NoType', null, , false)
        listener: beginTopLevelMethod(;, null)
        listener: handleNoType(const)
        ensureIdentifierPotentiallyRecovered(const, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(, topLevelFunctionDeclaration)
        parseMethodTypeVar()
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(, , false, MemberKind.TopLevelMethod)
          parseFormalParameters(, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(const, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          insertSyntheticIdentifier(typedef, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], messageOnToken: null)
            reportRecoverableError(const, Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(const)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(const, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, const, const)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], const, const)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(const)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(const)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(const)
      insertSyntheticIdentifier(const, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError(=, Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
        rewriter()
      parseFields(;, null, null, null, null, const, const, Instance of 'NoType', , DeclarationKind.TopLevel, null, false)
        listener: handleNoType(const)
        ensureIdentifierPotentiallyRecovered(const, topLevelVariableDeclaration, false)
          listener: handleIdentifier(, topLevelVariableDeclaration)
        parseFieldInitializerOpt(, , null, const, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      ensureIdentifier(=, expression)
                        reportRecoverableErrorWithToken(void, Instance of 'Template<(Token) => Message>')
                          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
                        rewriter()
                        listener: handleIdentifier(, expression)
                      listener: handleNoTypeArguments(void)
                      parseArgumentsOpt()
                        listener: handleNoArguments(void)
                      listener: handleSend(, void)
          listener: endFieldInitializer(=, void)
        ensureSemicolon()
          reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
          rewriter()
        listener: endTopLevelFields(null, null, null, const, 1, const, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, ;, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(continue, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
          listener: handleIdentifier(continue, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(continue, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(continue, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
          listener: handleIdentifier(continue, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(continue, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(covariant, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'covariant' as a name here., null, {token: covariant}], covariant, covariant)
          listener: handleIdentifier(covariant, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(covariant, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(covariant, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'covariant' as a name here., null, {token: covariant}], covariant, covariant)
          listener: handleIdentifier(covariant, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(covariant, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(default, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
          listener: handleIdentifier(default, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(default, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(default, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
          listener: handleIdentifier(default, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(default, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(deferred, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'deferred' as a name here., null, {token: deferred}], deferred, deferred)
          listener: handleIdentifier(deferred, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(deferred, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(deferred, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'deferred' as a name here., null, {token: deferred}], deferred, deferred)
          listener: handleIdentifier(deferred, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(deferred, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(do, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
          listener: handleIdentifier(do, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(do, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(do, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
          listener: handleIdentifier(do, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(do, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(dynamic, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'dynamic' as a name here., null, {token: dynamic}], dynamic, dynamic)
          listener: handleIdentifier(dynamic, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(dynamic, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(dynamic, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'dynamic' as a name here., null, {token: dynamic}], dynamic, dynamic)
          listener: handleIdentifier(dynamic, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(dynamic, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(else, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
          listener: handleIdentifier(else, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(else, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(else, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
          listener: handleIdentifier(else, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(else, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], messageOnToken: null)
            reportRecoverableError(enum, Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(enum)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(enum, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, enum, enum)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], enum, enum)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(enum)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, enum, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, enum)
      parseEnum(enum)
        listener: beginEnum(enum)
        ensureIdentifier(enum, enumDeclaration)
          reportRecoverableErrorWithToken((, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
          rewriter()
          listener: handleIdentifier(, enumDeclaration)
        ensureBlock(, Instance of 'Template<(Token) => Message>', null)
          reportRecoverableError(), Message[ExpectedEnumBody, Expected a enum body, but got ')'., An enum definition must have a body with at least one constant name., {token: )}])
            listener: handleRecoverableError(Message[ExpectedEnumBody, Expected a enum body, but got ')'., An enum definition must have a body with at least one constant name., {token: )}], ), ))
          insertBlock()
            rewriter()
            rewriter()
        listener: endEnum(enum, {, 0)
  listener: endTopLevelDeclaration())
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar())
      listener: endMetadataStar(0)
    listener: beginTopLevelMember())
    parseInvalidTopLevelDeclaration(})
      reportRecoverableErrorWithToken(), Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got ')'., null, {token: )}], ), ))
      listener: handleInvalidTopLevelDeclaration())
  listener: endTopLevelDeclaration(;)
  parseTopLevelDeclarationImpl(), Instance of 'DirectiveContext')
    parseMetadataStar())
      listener: beginMetadataStar(;)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(;)
    parseInvalidTopLevelDeclaration())
      reportRecoverableErrorWithToken(;, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[UnexpectedToken, Unexpected token ';'., null, {token: ;}], ;, ;)
      listener: handleInvalidTopLevelDeclaration(;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          insertSyntheticIdentifier(typedef, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], messageOnToken: null)
            reportRecoverableError(enum, Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(enum)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(enum, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, enum, enum)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], enum, enum)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(enum)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(enum)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, enum, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, enum)
      parseEnum(enum)
        listener: beginEnum(enum)
        ensureIdentifier(enum, enumDeclaration)
          reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
          rewriter()
          listener: handleIdentifier(, enumDeclaration)
        ensureBlock(, Instance of 'Template<(Token) => Message>', null)
          reportRecoverableError(void, Message[ExpectedEnumBody, Expected a enum body, but got 'void'., An enum definition must have a body with at least one constant name., {token: void}])
            listener: handleRecoverableError(Message[ExpectedEnumBody, Expected a enum body, but got 'void'., An enum definition must have a body with at least one constant name., {token: void}], void, void)
          insertBlock()
            rewriter()
            rewriter()
        listener: endEnum(enum, {, 0)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(}, Instance of 'DirectiveContext')
    parseMetadataStar(})
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(})
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(}, null, }, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(}, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(export, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'export' as a name here., null, {token: export}], export, export)
          listener: handleIdentifier(export, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(export, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(export, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'export' as a name here., null, {token: export}], export, export)
          listener: handleIdentifier(export, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(export, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
          listener: handleIdentifier(extends, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(extends, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(extends, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
          listener: handleIdentifier(extends, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(extends, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(extension, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'extension' as a name here., null, {token: extension}], extension, extension)
          listener: handleIdentifier(extension, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(extension, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(extension, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'extension' as a name here., null, {token: extension}], extension, extension)
          listener: handleIdentifier(extension, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(extension, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(external, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'external' as a name here., null, {token: external}], external, external)
          listener: handleIdentifier(external, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(external, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(external, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'external' as a name here., null, {token: external}], external, external)
          listener: handleIdentifier(external, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(external, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(factory, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'factory' as a name here., null, {token: factory}], factory, factory)
          listener: handleIdentifier(factory, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(factory, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(factory, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'factory' as a name here., null, {token: factory}], factory, factory)
          listener: handleIdentifier(factory, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(factory, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(false, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
          listener: handleIdentifier(false, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(false, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(false, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
          listener: handleIdentifier(false, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(false, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], messageOnToken: null)
            reportRecoverableError(final, Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(final)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(final, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, final, final)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], final, final)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(final)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(final)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(final)
      insertSyntheticIdentifier(final, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
        rewriter()
      reportRecoverableErrorWithToken(final, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'final' here., Try removing 'final'., {token: final}], final, final)
      parseTopLevelMethod(;, null, final, Instance of 'NoType', null, , false)
        listener: beginTopLevelMethod(;, null)
        listener: handleNoType(final)
        ensureIdentifierPotentiallyRecovered(final, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(, topLevelFunctionDeclaration)
        parseMethodTypeVar()
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(, , false, MemberKind.TopLevelMethod)
          parseFormalParameters(, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(final, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          insertSyntheticIdentifier(typedef, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], messageOnToken: null)
            reportRecoverableError(final, Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(final)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(final, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, final, final)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], final, final)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(final)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(final)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(final)
      insertSyntheticIdentifier(final, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError(=, Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
        rewriter()
      parseFields(;, null, null, null, null, final, final, Instance of 'NoType', , DeclarationKind.TopLevel, null, false)
        listener: handleNoType(final)
        ensureIdentifierPotentiallyRecovered(final, topLevelVariableDeclaration, false)
          listener: handleIdentifier(, topLevelVariableDeclaration)
        parseFieldInitializerOpt(, , null, final, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      ensureIdentifier(=, expression)
                        reportRecoverableErrorWithToken(void, Instance of 'Template<(Token) => Message>')
                          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
                        rewriter()
                        listener: handleIdentifier(, expression)
                      listener: handleNoTypeArguments(void)
                      parseArgumentsOpt()
                        listener: handleNoArguments(void)
                      listener: handleSend(, void)
          listener: endFieldInitializer(=, void)
        ensureSemicolon()
          reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
          rewriter()
        listener: endTopLevelFields(null, null, null, final, 1, final, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, ;, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(finally, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
          listener: handleIdentifier(finally, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(finally, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(finally, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
          listener: handleIdentifier(finally, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(finally, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(for, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
          listener: handleIdentifier(for, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(for, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(for, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
          listener: handleIdentifier(for, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(for, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(Function, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'Function'., null, {token: Function}], Function, Function)
          listener: handleIdentifier(Function, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(Function, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(Function, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(get, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'get' as a name here., null, {token: get}], get, get)
          listener: handleIdentifier(get, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(get, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(get, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'get' as a name here., null, {token: get}], get, get)
          listener: handleIdentifier(get, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(get, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(hide, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(hide, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(hide, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(if, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
          listener: handleIdentifier(if, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(if, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(if, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
          listener: handleIdentifier(if, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(if, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(implements, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'implements' as a name here., null, {token: implements}], implements, implements)
          listener: handleIdentifier(implements, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(implements, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(implements, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'implements' as a name here., null, {token: implements}], implements, implements)
          listener: handleIdentifier(implements, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(implements, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(import, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'import' as a name here., null, {token: import}], import, import)
          listener: handleIdentifier(import, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(import, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(import, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'import' as a name here., null, {token: import}], import, import)
          listener: handleIdentifier(import, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(import, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(in, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
          listener: handleIdentifier(in, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(in, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(in, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
          listener: handleIdentifier(in, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(in, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(inout, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(inout, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(inout, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(interface, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'interface' as a name here., null, {token: interface}], interface, interface)
          listener: handleIdentifier(interface, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(interface, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(interface, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'interface' as a name here., null, {token: interface}], interface, interface)
          listener: handleIdentifier(interface, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(interface, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(is, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
          listener: handleIdentifier(is, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(is, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(is, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
          listener: handleIdentifier(is, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(is, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(late, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'late' as a name here., null, {token: late}], late, late)
          listener: handleIdentifier(late, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(late, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(late, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'late' as a name here., null, {token: late}], late, late)
          listener: handleIdentifier(late, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(late, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(library, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'library' as a name here., null, {token: library}], library, library)
          listener: handleIdentifier(library, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(library, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(library, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'library' as a name here., null, {token: library}], library, library)
          listener: handleIdentifier(library, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(library, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(mixin, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'mixin' as a name here., null, {token: mixin}], mixin, mixin)
          listener: handleIdentifier(mixin, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(mixin, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(mixin, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'mixin' as a name here., null, {token: mixin}], mixin, mixin)
          listener: handleIdentifier(mixin, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(mixin, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(native, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(native, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(native, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(new, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
          listener: handleIdentifier(new, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(new, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(new, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
          listener: handleIdentifier(new, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(new, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(null, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
          listener: handleIdentifier(null, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(null, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(null, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
          listener: handleIdentifier(null, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(null, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(of, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(of, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(of, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(on, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(on, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(on, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(operator, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'operator' as a name here., null, {token: operator}], operator, operator)
          listener: handleIdentifier(operator, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(operator, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(operator, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'operator' as a name here., null, {token: operator}], operator, operator)
          listener: handleIdentifier(operator, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(operator, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(out, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(out, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(out, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(part, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'part' as a name here., null, {token: part}], part, part)
          listener: handleIdentifier(part, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(part, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(part, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'part' as a name here., null, {token: part}], part, part)
          listener: handleIdentifier(part, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(part, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(patch, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(patch, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(patch, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(required, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'required' as a name here., null, {token: required}], required, required)
          listener: handleIdentifier(required, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(required, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(required, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'required' as a name here., null, {token: required}], required, required)
          listener: handleIdentifier(required, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(required, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(rethrow, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
          listener: handleIdentifier(rethrow, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(rethrow, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(rethrow, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
          listener: handleIdentifier(rethrow, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(rethrow, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(return, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
          listener: handleIdentifier(return, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(return, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(return, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
          listener: handleIdentifier(return, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(return, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(set, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'set' as a name here., null, {token: set}], set, set)
          listener: handleIdentifier(set, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(set, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(set, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'set' as a name here., null, {token: set}], set, set)
          listener: handleIdentifier(set, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(set, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(show, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(show, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(show, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(source, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(source, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(source, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(static, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'static' as a name here., null, {token: static}], static, static)
          listener: handleIdentifier(static, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(static, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(static, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'static' as a name here., null, {token: static}], static, static)
          listener: handleIdentifier(static, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(static, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(super, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
          listener: handleIdentifier(super, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(super, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(super, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
          listener: handleIdentifier(super, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(super, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(switch, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
          listener: handleIdentifier(switch, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(switch, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(switch, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
          listener: handleIdentifier(switch, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(switch, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(sync, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(sync, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(sync, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(this, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
          listener: handleIdentifier(this, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(this, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(this, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
          listener: handleIdentifier(this, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(this, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(throw, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
          listener: handleIdentifier(throw, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(throw, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(throw, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
          listener: handleIdentifier(throw, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(throw, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(true, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
          listener: handleIdentifier(true, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(true, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(true, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
          listener: handleIdentifier(true, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(true, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(try, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
          listener: handleIdentifier(try, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(try, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(try, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
          listener: handleIdentifier(try, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(try, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(typedef, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'typedef' as a name here., null, {token: typedef}], typedef, typedef)
          listener: handleIdentifier(typedef, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(typedef, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(typedef, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'typedef' as a name here., null, {token: typedef}], typedef, typedef)
          listener: handleIdentifier(typedef, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(typedef, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], messageOnToken: null)
            reportRecoverableError(var, Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(var)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(var, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, var, var)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], var, var)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      insertSyntheticIdentifier(var, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
        rewriter()
      reportRecoverableError(var, VarReturnType)
        listener: handleRecoverableError(VarReturnType, var, var)
      parseTopLevelMethod(;, null, var, Instance of 'NoType', null, , false)
        listener: beginTopLevelMethod(;, null)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(, topLevelFunctionDeclaration)
        parseMethodTypeVar()
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(, , false, MemberKind.TopLevelMethod)
          parseFormalParameters(, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(var, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          insertSyntheticIdentifier(typedef, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], messageOnToken: null)
            reportRecoverableError(var, Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(var)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(var, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, var, var)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], var, var)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(var)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(var)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(var)
      insertSyntheticIdentifier(var, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError(=, Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
        rewriter()
      parseFields(;, null, null, null, null, var, var, Instance of 'NoType', , DeclarationKind.TopLevel, null, false)
        listener: handleNoType(var)
        ensureIdentifierPotentiallyRecovered(var, topLevelVariableDeclaration, false)
          listener: handleIdentifier(, topLevelVariableDeclaration)
        parseFieldInitializerOpt(, , null, var, DeclarationKind.TopLevel, null)
          listener: beginFieldInitializer(=)
          parseExpression(=)
            parsePrecedenceExpression(=, 1, true)
              parseUnaryExpression(=, true)
                parsePrimary(=, expression)
                  parseSendOrFunctionLiteral(=, expression)
                    looksLikeFunctionBody(;)
                    parseSend(=, expression)
                      ensureIdentifier(=, expression)
                        reportRecoverableErrorWithToken(void, Instance of 'Template<(Token) => Message>')
                          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
                        rewriter()
                        listener: handleIdentifier(, expression)
                      listener: handleNoTypeArguments(void)
                      parseArgumentsOpt()
                        listener: handleNoArguments(void)
                      listener: handleSend(, void)
          listener: endFieldInitializer(=, void)
        ensureSemicolon()
          reportRecoverableError(, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
          rewriter()
        listener: endTopLevelFields(null, null, null, var, 1, var, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(;, null, ;, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(;, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], messageOnToken: null)
            reportRecoverableError(void, Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(void)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(void, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, void, void)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(;)
      listener: beginTopLevelMember(void)
      insertSyntheticIdentifier(void, methodDeclaration, message: null, messageOnToken: null)
        reportRecoverableError((, Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}])
          listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
        rewriter()
      parseTopLevelMethod(;, null, ;, Instance of 'VoidType', null, , false)
        listener: beginTopLevelMethod(;, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(, topLevelFunctionDeclaration)
        parseMethodTypeVar()
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(, , false, MemberKind.TopLevelMethod)
          parseFormalParameters(, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          insertSyntheticIdentifier(void, typedefDeclaration, message: Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], messageOnToken: null)
            reportRecoverableError(=, Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}])
              listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
            rewriter()
          listener: handleIdentifier(, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(while, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
          listener: handleIdentifier(while, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(while, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(while, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
          listener: handleIdentifier(while, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(while, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
          listener: handleIdentifier(with, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(with, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleNoType(typedef)
        ensureIdentifier(typedef, typedefDeclaration)
          reportRecoverableErrorWithToken(with, Instance of 'Template<(Token) => Message>')
            listener: handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
          listener: handleIdentifier(with, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        parseFormalParametersRequiredOpt(with, MemberKind.FunctionTypeAlias)
          missingParameterMessage(MemberKind.FunctionTypeAlias)
          reportRecoverableError(=, MissingTypedefParameters)
            listener: handleRecoverableError(MissingTypedefParameters, =, =)
          rewriter()
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
          reportRecoverableError((, Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}])
            listener: handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
          rewriter()
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(=)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(=)
      listener: endMetadataStar(0)
    listener: beginTopLevelMember(=)
    parseInvalidTopLevelDeclaration(;)
      reportRecoverableErrorWithToken(=, Instance of 'Template<(Token) => Message>')
        listener: handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
      listener: handleInvalidTopLevelDeclaration(=)
  listener: endTopLevelDeclaration(void)
  parseTopLevelDeclarationImpl(=, Instance of 'DirectiveContext')
    parseMetadataStar(=)
      listener: beginMetadataStar(void)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl(=)
      listener: beginTopLevelMember(void)
      parseTopLevelMethod(=, null, =, Instance of 'VoidType', null, Function, false)
        listener: beginTopLevelMethod(=, null)
        listener: handleVoidKeyword(void)
        ensureIdentifierPotentiallyRecovered(void, topLevelFunctionDeclaration, false)
          listener: handleIdentifier(Function, topLevelFunctionDeclaration)
        parseMethodTypeVar(Function)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(Function, Function, false, MemberKind.TopLevelMethod)
          parseFormalParameters(Function, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          reportRecoverableError(;, ExpectedBody)
            listener: handleRecoverableError(ExpectedBody, ;, ;)
          listener: handleEmptyFunctionBody(;)
        listener: endTopLevelMethod(void, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleVoidKeyword(void)
        ensureIdentifier(void, typedefDeclaration)
          listener: handleIdentifier(yield, typedefDeclaration)
        listener: handleNoTypeVariables(()
        parseFormalParametersRequiredOpt(yield, MemberKind.FunctionTypeAlias)
          parseFormalParametersRest((, MemberKind.FunctionTypeAlias)
            listener: beginFormalParameters((, MemberKind.FunctionTypeAlias)
            listener: endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, null, ;)
  listener: endTopLevelDeclaration(typedef)
  parseTopLevelDeclarationImpl(;, Instance of 'DirectiveContext')
    parseMetadataStar(;)
      listener: beginMetadataStar(typedef)
      listener: endMetadataStar(0)
    parseTopLevelKeywordDeclaration(;, typedef, Instance of 'DirectiveContext')
      parseTopLevelKeywordModifiers(;, typedef)
      parseTypedef(typedef)
        listener: beginFunctionTypeAlias(typedef)
        listener: handleIdentifier(yield, typedefDeclaration)
        listener: handleNoTypeVariables(=)
        listener: handleNoTypeVariables(()
        listener: beginFunctionType(void)
        listener: handleVoidKeyword(void)
        parseFormalParametersRequiredOpt(Function, MemberKind.GeneralizedFunctionType)
          parseFormalParametersRest((, MemberKind.GeneralizedFunctionType)
            listener: beginFormalParameters((, MemberKind.GeneralizedFunctionType)
            listener: endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
        listener: endFunctionType(Function, null)
        ensureSemicolon())
        listener: endFunctionTypeAlias(typedef, =, ;)
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(typedef)
  listener: endCompilationUnit(258, )
