Problems reported:

parser/error_recovery/keyword_named_typedefs:1:14: Can't use 'abstract' as a name here.
typedef void abstract();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:2:9: Can't use 'abstract' as a name here.
typedef abstract = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:2:18: A typedef needs an explicit list of parameters.
typedef abstract = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:2:18: Expected ';' after this.
typedef abstract = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:2:18: Expected a declaration, but got '='.
typedef abstract = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:2:35: Expected a function body or '=>'.
typedef abstract = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:3:14: Can't use 'as' as a name here.
typedef void as();
             ^^

parser/error_recovery/keyword_named_typedefs:4:9: Can't use 'as' as a name here.
typedef as = void Function();
        ^^

parser/error_recovery/keyword_named_typedefs:4:12: A typedef needs an explicit list of parameters.
typedef as = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:4:12: Expected ';' after this.
typedef as = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:4:12: Expected a declaration, but got '='.
typedef as = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:4:29: Expected a function body or '=>'.
typedef as = void Function();
                            ^

parser/error_recovery/keyword_named_typedefs:5:14: Expected an identifier, but got 'assert'.
typedef void assert();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:6:9: Expected an identifier, but got 'assert'.
typedef assert = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:6:16: A typedef needs an explicit list of parameters.
typedef assert = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:6:16: Expected ';' after this.
typedef assert = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:6:16: Expected a declaration, but got '='.
typedef assert = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:6:33: Expected a function body or '=>'.
typedef assert = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:11:14: Expected an identifier, but got 'break'.
typedef void break();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:12:9: Expected an identifier, but got 'break'.
typedef break = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:12:15: A typedef needs an explicit list of parameters.
typedef break = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:12:15: Expected ';' after this.
typedef break = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:12:15: Expected a declaration, but got '='.
typedef break = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:12:32: Expected a function body or '=>'.
typedef break = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:13:14: Expected an identifier, but got 'case'.
typedef void case();
             ^^^^

parser/error_recovery/keyword_named_typedefs:14:9: Expected an identifier, but got 'case'.
typedef case = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:14:14: A typedef needs an explicit list of parameters.
typedef case = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:14:14: Expected ';' after this.
typedef case = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:14:14: Expected a declaration, but got '='.
typedef case = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:14:31: Expected a function body or '=>'.
typedef case = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:15:14: Expected an identifier, but got 'catch'.
typedef void catch();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:16:9: Expected an identifier, but got 'catch'.
typedef catch = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:16:15: A typedef needs an explicit list of parameters.
typedef catch = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:16:15: Expected ';' after this.
typedef catch = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:16:15: Expected a declaration, but got '='.
typedef catch = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:16:32: Expected a function body or '=>'.
typedef catch = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:17:14: Expected an identifier, but got 'class'.
typedef void class();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:17:14: A typedef needs an explicit list of parameters.
typedef void class();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:17:14: Expected ';' after this.
typedef void class();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:17:19: Expected an identifier, but got '('.
typedef void class();
                  ^

parser/error_recovery/keyword_named_typedefs:17:20: A class declaration must have a body, even if it is empty.
typedef void class();
                   ^

parser/error_recovery/keyword_named_typedefs:17:20: Expected a declaration, but got ')'.
typedef void class();
                   ^

parser/error_recovery/keyword_named_typedefs:17:21: Unexpected token ';'.
typedef void class();
                    ^

parser/error_recovery/keyword_named_typedefs:18:9: Expected an identifier, but got 'class'.
typedef class = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:18:9: A typedef needs an explicit list of parameters.
typedef class = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:18:9: Expected ';' after this.
typedef class = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:18:15: Expected an identifier, but got '='.
typedef class = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:18:17: A class declaration must have a body, even if it is empty.
typedef class = void Function();
                ^^^^

parser/error_recovery/keyword_named_typedefs:18:32: Expected a function body or '=>'.
typedef class = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:19:14: Expected an identifier, but got 'const'.
typedef void const();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:19:14: A typedef needs an explicit list of parameters.
typedef void const();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:19:14: Expected ';' after this.
typedef void const();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:19:19: Expected an identifier, but got '('.
typedef void const();
                  ^

parser/error_recovery/keyword_named_typedefs:19:14: Can't have modifier 'const' here.
typedef void const();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:19:21: Expected a function body or '=>'.
typedef void const();
                    ^

parser/error_recovery/keyword_named_typedefs:20:9: Expected an identifier, but got 'const'.
typedef const = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:20:9: A typedef needs an explicit list of parameters.
typedef const = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:20:9: Expected ';' after this.
typedef const = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:20:15: Expected an identifier, but got '='.
typedef const = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:20:17: Expected an identifier, but got 'void'.
typedef const = void Function();
                ^^^^

parser/error_recovery/keyword_named_typedefs:20:17: Expected ';' after this.
typedef const = void Function();
                ^^^^

parser/error_recovery/keyword_named_typedefs:20:32: Expected a function body or '=>'.
typedef const = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:21:14: Expected an identifier, but got 'continue'.
typedef void continue();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:22:9: Expected an identifier, but got 'continue'.
typedef continue = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:22:18: A typedef needs an explicit list of parameters.
typedef continue = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:22:18: Expected ';' after this.
typedef continue = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:22:18: Expected a declaration, but got '='.
typedef continue = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:22:35: Expected a function body or '=>'.
typedef continue = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:23:14: Can't use 'covariant' as a name here.
typedef void covariant();
             ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:24:9: Can't use 'covariant' as a name here.
typedef covariant = void Function();
        ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:24:19: A typedef needs an explicit list of parameters.
typedef covariant = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:24:19: Expected ';' after this.
typedef covariant = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:24:19: Expected a declaration, but got '='.
typedef covariant = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:24:36: Expected a function body or '=>'.
typedef covariant = void Function();
                                   ^

parser/error_recovery/keyword_named_typedefs:25:14: Expected an identifier, but got 'default'.
typedef void default();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:26:9: Expected an identifier, but got 'default'.
typedef default = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:26:17: A typedef needs an explicit list of parameters.
typedef default = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:26:17: Expected ';' after this.
typedef default = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:26:17: Expected a declaration, but got '='.
typedef default = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:26:34: Expected a function body or '=>'.
typedef default = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:27:14: Can't use 'deferred' as a name here.
typedef void deferred();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:28:9: Can't use 'deferred' as a name here.
typedef deferred = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:28:18: A typedef needs an explicit list of parameters.
typedef deferred = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:28:18: Expected ';' after this.
typedef deferred = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:28:18: Expected a declaration, but got '='.
typedef deferred = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:28:35: Expected a function body or '=>'.
typedef deferred = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:29:14: Expected an identifier, but got 'do'.
typedef void do();
             ^^

parser/error_recovery/keyword_named_typedefs:30:9: Expected an identifier, but got 'do'.
typedef do = void Function();
        ^^

parser/error_recovery/keyword_named_typedefs:30:12: A typedef needs an explicit list of parameters.
typedef do = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:30:12: Expected ';' after this.
typedef do = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:30:12: Expected a declaration, but got '='.
typedef do = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:30:29: Expected a function body or '=>'.
typedef do = void Function();
                            ^

parser/error_recovery/keyword_named_typedefs:31:14: Can't use 'dynamic' as a name here.
typedef void dynamic();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:32:9: Can't use 'dynamic' as a name here.
typedef dynamic = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:32:17: A typedef needs an explicit list of parameters.
typedef dynamic = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:32:17: Expected ';' after this.
typedef dynamic = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:32:17: Expected a declaration, but got '='.
typedef dynamic = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:32:34: Expected a function body or '=>'.
typedef dynamic = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:33:14: Expected an identifier, but got 'else'.
typedef void else();
             ^^^^

parser/error_recovery/keyword_named_typedefs:34:9: Expected an identifier, but got 'else'.
typedef else = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:34:14: A typedef needs an explicit list of parameters.
typedef else = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:34:14: Expected ';' after this.
typedef else = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:34:14: Expected a declaration, but got '='.
typedef else = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:34:31: Expected a function body or '=>'.
typedef else = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:35:14: Expected an identifier, but got 'enum'.
typedef void enum();
             ^^^^

parser/error_recovery/keyword_named_typedefs:35:14: A typedef needs an explicit list of parameters.
typedef void enum();
             ^^^^

parser/error_recovery/keyword_named_typedefs:35:14: Expected ';' after this.
typedef void enum();
             ^^^^

parser/error_recovery/keyword_named_typedefs:35:18: Expected an identifier, but got '('.
typedef void enum();
                 ^

parser/error_recovery/keyword_named_typedefs:35:19: Expected a enum body, but got ')'.
typedef void enum();
                  ^

parser/error_recovery/keyword_named_typedefs:35:19: Expected a declaration, but got ')'.
typedef void enum();
                  ^

parser/error_recovery/keyword_named_typedefs:35:20: Unexpected token ';'.
typedef void enum();
                   ^

parser/error_recovery/keyword_named_typedefs:36:9: Expected an identifier, but got 'enum'.
typedef enum = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:36:9: A typedef needs an explicit list of parameters.
typedef enum = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:36:9: Expected ';' after this.
typedef enum = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:36:14: Expected an identifier, but got '='.
typedef enum = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:36:16: Expected a enum body, but got 'void'.
typedef enum = void Function();
               ^^^^

parser/error_recovery/keyword_named_typedefs:36:31: Expected a function body or '=>'.
typedef enum = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:37:14: Can't use 'export' as a name here.
typedef void export();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:38:9: Can't use 'export' as a name here.
typedef export = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:38:16: A typedef needs an explicit list of parameters.
typedef export = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:38:16: Expected ';' after this.
typedef export = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:38:16: Expected a declaration, but got '='.
typedef export = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:38:33: Expected a function body or '=>'.
typedef export = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:39:14: Expected an identifier, but got 'extends'.
typedef void extends();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:40:9: Expected an identifier, but got 'extends'.
typedef extends = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:40:17: A typedef needs an explicit list of parameters.
typedef extends = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:40:17: Expected ';' after this.
typedef extends = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:40:17: Expected a declaration, but got '='.
typedef extends = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:40:34: Expected a function body or '=>'.
typedef extends = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:41:14: Can't use 'extension' as a name here.
typedef void extension();
             ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:42:9: Can't use 'extension' as a name here.
typedef extension = void Function();
        ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:42:19: A typedef needs an explicit list of parameters.
typedef extension = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:42:19: Expected ';' after this.
typedef extension = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:42:19: Expected a declaration, but got '='.
typedef extension = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:42:36: Expected a function body or '=>'.
typedef extension = void Function();
                                   ^

parser/error_recovery/keyword_named_typedefs:43:14: Can't use 'external' as a name here.
typedef void external();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:44:9: Can't use 'external' as a name here.
typedef external = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:44:18: A typedef needs an explicit list of parameters.
typedef external = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:44:18: Expected ';' after this.
typedef external = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:44:18: Expected a declaration, but got '='.
typedef external = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:44:35: Expected a function body or '=>'.
typedef external = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:45:14: Can't use 'factory' as a name here.
typedef void factory();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:46:9: Can't use 'factory' as a name here.
typedef factory = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:46:17: A typedef needs an explicit list of parameters.
typedef factory = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:46:17: Expected ';' after this.
typedef factory = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:46:17: Expected a declaration, but got '='.
typedef factory = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:46:34: Expected a function body or '=>'.
typedef factory = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:47:14: Expected an identifier, but got 'false'.
typedef void false();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:48:9: Expected an identifier, but got 'false'.
typedef false = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:48:15: A typedef needs an explicit list of parameters.
typedef false = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:48:15: Expected ';' after this.
typedef false = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:48:15: Expected a declaration, but got '='.
typedef false = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:48:32: Expected a function body or '=>'.
typedef false = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:49:14: Expected an identifier, but got 'final'.
typedef void final();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:49:14: A typedef needs an explicit list of parameters.
typedef void final();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:49:14: Expected ';' after this.
typedef void final();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:49:19: Expected an identifier, but got '('.
typedef void final();
                  ^

parser/error_recovery/keyword_named_typedefs:49:14: Can't have modifier 'final' here.
typedef void final();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:49:21: Expected a function body or '=>'.
typedef void final();
                    ^

parser/error_recovery/keyword_named_typedefs:50:9: Expected an identifier, but got 'final'.
typedef final = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:50:9: A typedef needs an explicit list of parameters.
typedef final = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:50:9: Expected ';' after this.
typedef final = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:50:15: Expected an identifier, but got '='.
typedef final = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:50:17: Expected an identifier, but got 'void'.
typedef final = void Function();
                ^^^^

parser/error_recovery/keyword_named_typedefs:50:17: Expected ';' after this.
typedef final = void Function();
                ^^^^

parser/error_recovery/keyword_named_typedefs:50:32: Expected a function body or '=>'.
typedef final = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:51:14: Expected an identifier, but got 'finally'.
typedef void finally();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:52:9: Expected an identifier, but got 'finally'.
typedef finally = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:52:17: A typedef needs an explicit list of parameters.
typedef finally = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:52:17: Expected ';' after this.
typedef finally = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:52:17: Expected a declaration, but got '='.
typedef finally = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:52:34: Expected a function body or '=>'.
typedef finally = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:53:14: Expected an identifier, but got 'for'.
typedef void for();
             ^^^

parser/error_recovery/keyword_named_typedefs:54:9: Expected an identifier, but got 'for'.
typedef for = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:54:13: A typedef needs an explicit list of parameters.
typedef for = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:54:13: Expected ';' after this.
typedef for = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:54:13: Expected a declaration, but got '='.
typedef for = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:54:30: Expected a function body or '=>'.
typedef for = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:55:14: Expected an identifier, but got 'Function'.
typedef void Function();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:57:14: Can't use 'get' as a name here.
typedef void get();
             ^^^

parser/error_recovery/keyword_named_typedefs:58:9: Can't use 'get' as a name here.
typedef get = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:58:13: A typedef needs an explicit list of parameters.
typedef get = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:58:13: Expected ';' after this.
typedef get = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:58:13: Expected a declaration, but got '='.
typedef get = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:58:30: Expected a function body or '=>'.
typedef get = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:61:14: Expected an identifier, but got 'if'.
typedef void if();
             ^^

parser/error_recovery/keyword_named_typedefs:62:9: Expected an identifier, but got 'if'.
typedef if = void Function();
        ^^

parser/error_recovery/keyword_named_typedefs:62:12: A typedef needs an explicit list of parameters.
typedef if = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:62:12: Expected ';' after this.
typedef if = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:62:12: Expected a declaration, but got '='.
typedef if = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:62:29: Expected a function body or '=>'.
typedef if = void Function();
                            ^

parser/error_recovery/keyword_named_typedefs:63:14: Can't use 'implements' as a name here.
typedef void implements();
             ^^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:64:9: Can't use 'implements' as a name here.
typedef implements = void Function();
        ^^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:64:20: A typedef needs an explicit list of parameters.
typedef implements = void Function();
                   ^

parser/error_recovery/keyword_named_typedefs:64:20: Expected ';' after this.
typedef implements = void Function();
                   ^

parser/error_recovery/keyword_named_typedefs:64:20: Expected a declaration, but got '='.
typedef implements = void Function();
                   ^

parser/error_recovery/keyword_named_typedefs:64:37: Expected a function body or '=>'.
typedef implements = void Function();
                                    ^

parser/error_recovery/keyword_named_typedefs:65:14: Can't use 'import' as a name here.
typedef void import();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:66:9: Can't use 'import' as a name here.
typedef import = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:66:16: A typedef needs an explicit list of parameters.
typedef import = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:66:16: Expected ';' after this.
typedef import = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:66:16: Expected a declaration, but got '='.
typedef import = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:66:33: Expected a function body or '=>'.
typedef import = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:67:14: Expected an identifier, but got 'in'.
typedef void in();
             ^^

parser/error_recovery/keyword_named_typedefs:68:9: Expected an identifier, but got 'in'.
typedef in = void Function();
        ^^

parser/error_recovery/keyword_named_typedefs:68:12: A typedef needs an explicit list of parameters.
typedef in = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:68:12: Expected ';' after this.
typedef in = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:68:12: Expected a declaration, but got '='.
typedef in = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:68:29: Expected a function body or '=>'.
typedef in = void Function();
                            ^

parser/error_recovery/keyword_named_typedefs:71:14: Can't use 'interface' as a name here.
typedef void interface();
             ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:72:9: Can't use 'interface' as a name here.
typedef interface = void Function();
        ^^^^^^^^^

parser/error_recovery/keyword_named_typedefs:72:19: A typedef needs an explicit list of parameters.
typedef interface = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:72:19: Expected ';' after this.
typedef interface = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:72:19: Expected a declaration, but got '='.
typedef interface = void Function();
                  ^

parser/error_recovery/keyword_named_typedefs:72:36: Expected a function body or '=>'.
typedef interface = void Function();
                                   ^

parser/error_recovery/keyword_named_typedefs:73:14: Expected an identifier, but got 'is'.
typedef void is();
             ^^

parser/error_recovery/keyword_named_typedefs:74:9: Expected an identifier, but got 'is'.
typedef is = void Function();
        ^^

parser/error_recovery/keyword_named_typedefs:74:12: A typedef needs an explicit list of parameters.
typedef is = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:74:12: Expected ';' after this.
typedef is = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:74:12: Expected a declaration, but got '='.
typedef is = void Function();
           ^

parser/error_recovery/keyword_named_typedefs:74:29: Expected a function body or '=>'.
typedef is = void Function();
                            ^

parser/error_recovery/keyword_named_typedefs:75:14: Can't use 'late' as a name here.
typedef void late();
             ^^^^

parser/error_recovery/keyword_named_typedefs:76:9: Can't use 'late' as a name here.
typedef late = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:76:14: A typedef needs an explicit list of parameters.
typedef late = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:76:14: Expected ';' after this.
typedef late = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:76:14: Expected a declaration, but got '='.
typedef late = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:76:31: Expected a function body or '=>'.
typedef late = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:77:14: Can't use 'library' as a name here.
typedef void library();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:78:9: Can't use 'library' as a name here.
typedef library = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:78:17: A typedef needs an explicit list of parameters.
typedef library = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:78:17: Expected ';' after this.
typedef library = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:78:17: Expected a declaration, but got '='.
typedef library = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:78:34: Expected a function body or '=>'.
typedef library = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:79:14: Can't use 'mixin' as a name here.
typedef void mixin();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:80:9: Can't use 'mixin' as a name here.
typedef mixin = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:80:15: A typedef needs an explicit list of parameters.
typedef mixin = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:80:15: Expected ';' after this.
typedef mixin = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:80:15: Expected a declaration, but got '='.
typedef mixin = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:80:32: Expected a function body or '=>'.
typedef mixin = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:83:14: Expected an identifier, but got 'new'.
typedef void new();
             ^^^

parser/error_recovery/keyword_named_typedefs:84:9: Expected an identifier, but got 'new'.
typedef new = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:84:13: A typedef needs an explicit list of parameters.
typedef new = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:84:13: Expected ';' after this.
typedef new = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:84:13: Expected a declaration, but got '='.
typedef new = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:84:30: Expected a function body or '=>'.
typedef new = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:85:14: Expected an identifier, but got 'null'.
typedef void null();
             ^^^^

parser/error_recovery/keyword_named_typedefs:86:9: Expected an identifier, but got 'null'.
typedef null = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:86:14: A typedef needs an explicit list of parameters.
typedef null = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:86:14: Expected ';' after this.
typedef null = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:86:14: Expected a declaration, but got '='.
typedef null = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:86:31: Expected a function body or '=>'.
typedef null = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:91:14: Can't use 'operator' as a name here.
typedef void operator();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:92:9: Can't use 'operator' as a name here.
typedef operator = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:92:18: A typedef needs an explicit list of parameters.
typedef operator = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:92:18: Expected ';' after this.
typedef operator = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:92:18: Expected a declaration, but got '='.
typedef operator = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:92:35: Expected a function body or '=>'.
typedef operator = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:95:14: Can't use 'part' as a name here.
typedef void part();
             ^^^^

parser/error_recovery/keyword_named_typedefs:96:9: Can't use 'part' as a name here.
typedef part = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:96:14: A typedef needs an explicit list of parameters.
typedef part = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:96:14: Expected ';' after this.
typedef part = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:96:14: Expected a declaration, but got '='.
typedef part = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:96:31: Expected a function body or '=>'.
typedef part = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:99:14: Can't use 'required' as a name here.
typedef void required();
             ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:100:9: Can't use 'required' as a name here.
typedef required = void Function();
        ^^^^^^^^

parser/error_recovery/keyword_named_typedefs:100:18: A typedef needs an explicit list of parameters.
typedef required = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:100:18: Expected ';' after this.
typedef required = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:100:18: Expected a declaration, but got '='.
typedef required = void Function();
                 ^

parser/error_recovery/keyword_named_typedefs:100:35: Expected a function body or '=>'.
typedef required = void Function();
                                  ^

parser/error_recovery/keyword_named_typedefs:101:14: Expected an identifier, but got 'rethrow'.
typedef void rethrow();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:102:9: Expected an identifier, but got 'rethrow'.
typedef rethrow = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:102:17: A typedef needs an explicit list of parameters.
typedef rethrow = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:102:17: Expected ';' after this.
typedef rethrow = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:102:17: Expected a declaration, but got '='.
typedef rethrow = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:102:34: Expected a function body or '=>'.
typedef rethrow = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:103:14: Expected an identifier, but got 'return'.
typedef void return();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:104:9: Expected an identifier, but got 'return'.
typedef return = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:104:16: A typedef needs an explicit list of parameters.
typedef return = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:104:16: Expected ';' after this.
typedef return = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:104:16: Expected a declaration, but got '='.
typedef return = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:104:33: Expected a function body or '=>'.
typedef return = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:105:14: Can't use 'set' as a name here.
typedef void set();
             ^^^

parser/error_recovery/keyword_named_typedefs:106:9: Can't use 'set' as a name here.
typedef set = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:106:13: A typedef needs an explicit list of parameters.
typedef set = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:106:13: Expected ';' after this.
typedef set = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:106:13: Expected a declaration, but got '='.
typedef set = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:106:30: Expected a function body or '=>'.
typedef set = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:111:14: Can't use 'static' as a name here.
typedef void static();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:112:9: Can't use 'static' as a name here.
typedef static = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:112:16: A typedef needs an explicit list of parameters.
typedef static = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:112:16: Expected ';' after this.
typedef static = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:112:16: Expected a declaration, but got '='.
typedef static = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:112:33: Expected a function body or '=>'.
typedef static = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:113:14: Expected an identifier, but got 'super'.
typedef void super();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:114:9: Expected an identifier, but got 'super'.
typedef super = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:114:15: A typedef needs an explicit list of parameters.
typedef super = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:114:15: Expected ';' after this.
typedef super = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:114:15: Expected a declaration, but got '='.
typedef super = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:114:32: Expected a function body or '=>'.
typedef super = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:115:14: Expected an identifier, but got 'switch'.
typedef void switch();
             ^^^^^^

parser/error_recovery/keyword_named_typedefs:116:9: Expected an identifier, but got 'switch'.
typedef switch = void Function();
        ^^^^^^

parser/error_recovery/keyword_named_typedefs:116:16: A typedef needs an explicit list of parameters.
typedef switch = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:116:16: Expected ';' after this.
typedef switch = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:116:16: Expected a declaration, but got '='.
typedef switch = void Function();
               ^

parser/error_recovery/keyword_named_typedefs:116:33: Expected a function body or '=>'.
typedef switch = void Function();
                                ^

parser/error_recovery/keyword_named_typedefs:119:14: Expected an identifier, but got 'this'.
typedef void this();
             ^^^^

parser/error_recovery/keyword_named_typedefs:120:9: Expected an identifier, but got 'this'.
typedef this = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:120:14: A typedef needs an explicit list of parameters.
typedef this = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:120:14: Expected ';' after this.
typedef this = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:120:14: Expected a declaration, but got '='.
typedef this = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:120:31: Expected a function body or '=>'.
typedef this = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:121:14: Expected an identifier, but got 'throw'.
typedef void throw();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:122:9: Expected an identifier, but got 'throw'.
typedef throw = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:122:15: A typedef needs an explicit list of parameters.
typedef throw = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:122:15: Expected ';' after this.
typedef throw = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:122:15: Expected a declaration, but got '='.
typedef throw = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:122:32: Expected a function body or '=>'.
typedef throw = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:123:14: Expected an identifier, but got 'true'.
typedef void true();
             ^^^^

parser/error_recovery/keyword_named_typedefs:124:9: Expected an identifier, but got 'true'.
typedef true = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:124:14: A typedef needs an explicit list of parameters.
typedef true = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:124:14: Expected ';' after this.
typedef true = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:124:14: Expected a declaration, but got '='.
typedef true = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:124:31: Expected a function body or '=>'.
typedef true = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:125:14: Expected an identifier, but got 'try'.
typedef void try();
             ^^^

parser/error_recovery/keyword_named_typedefs:126:9: Expected an identifier, but got 'try'.
typedef try = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:126:13: A typedef needs an explicit list of parameters.
typedef try = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:126:13: Expected ';' after this.
typedef try = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:126:13: Expected a declaration, but got '='.
typedef try = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:126:30: Expected a function body or '=>'.
typedef try = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:127:14: Can't use 'typedef' as a name here.
typedef void typedef();
             ^^^^^^^

parser/error_recovery/keyword_named_typedefs:128:9: Can't use 'typedef' as a name here.
typedef typedef = void Function();
        ^^^^^^^

parser/error_recovery/keyword_named_typedefs:128:17: A typedef needs an explicit list of parameters.
typedef typedef = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:128:17: Expected ';' after this.
typedef typedef = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:128:17: Expected a declaration, but got '='.
typedef typedef = void Function();
                ^

parser/error_recovery/keyword_named_typedefs:128:34: Expected a function body or '=>'.
typedef typedef = void Function();
                                 ^

parser/error_recovery/keyword_named_typedefs:129:14: Expected an identifier, but got 'var'.
typedef void var();
             ^^^

parser/error_recovery/keyword_named_typedefs:129:14: A typedef needs an explicit list of parameters.
typedef void var();
             ^^^

parser/error_recovery/keyword_named_typedefs:129:14: Expected ';' after this.
typedef void var();
             ^^^

parser/error_recovery/keyword_named_typedefs:129:17: Expected an identifier, but got '('.
typedef void var();
                ^

parser/error_recovery/keyword_named_typedefs:129:14: The return type can't be 'var'.
typedef void var();
             ^^^

parser/error_recovery/keyword_named_typedefs:129:19: Expected a function body or '=>'.
typedef void var();
                  ^

parser/error_recovery/keyword_named_typedefs:130:9: Expected an identifier, but got 'var'.
typedef var = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:130:9: A typedef needs an explicit list of parameters.
typedef var = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:130:9: Expected ';' after this.
typedef var = void Function();
        ^^^

parser/error_recovery/keyword_named_typedefs:130:13: Expected an identifier, but got '='.
typedef var = void Function();
            ^

parser/error_recovery/keyword_named_typedefs:130:15: Expected an identifier, but got 'void'.
typedef var = void Function();
              ^^^^

parser/error_recovery/keyword_named_typedefs:130:15: Expected ';' after this.
typedef var = void Function();
              ^^^^

parser/error_recovery/keyword_named_typedefs:130:30: Expected a function body or '=>'.
typedef var = void Function();
                             ^

parser/error_recovery/keyword_named_typedefs:131:14: Expected an identifier, but got 'void'.
typedef void void();
             ^^^^

parser/error_recovery/keyword_named_typedefs:131:14: A typedef needs an explicit list of parameters.
typedef void void();
             ^^^^

parser/error_recovery/keyword_named_typedefs:131:14: Expected ';' after this.
typedef void void();
             ^^^^

parser/error_recovery/keyword_named_typedefs:131:18: Expected an identifier, but got '('.
typedef void void();
                 ^

parser/error_recovery/keyword_named_typedefs:131:20: Expected a function body or '=>'.
typedef void void();
                   ^

parser/error_recovery/keyword_named_typedefs:132:14: Expected an identifier, but got '='.
typedef void = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:132:14: A typedef needs an explicit list of parameters.
typedef void = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:132:14: Expected ';' after this.
typedef void = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:132:14: Expected a declaration, but got '='.
typedef void = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:132:31: Expected a function body or '=>'.
typedef void = void Function();
                              ^

parser/error_recovery/keyword_named_typedefs:133:14: Expected an identifier, but got 'while'.
typedef void while();
             ^^^^^

parser/error_recovery/keyword_named_typedefs:134:9: Expected an identifier, but got 'while'.
typedef while = void Function();
        ^^^^^

parser/error_recovery/keyword_named_typedefs:134:15: A typedef needs an explicit list of parameters.
typedef while = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:134:15: Expected ';' after this.
typedef while = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:134:15: Expected a declaration, but got '='.
typedef while = void Function();
              ^

parser/error_recovery/keyword_named_typedefs:134:32: Expected a function body or '=>'.
typedef while = void Function();
                               ^

parser/error_recovery/keyword_named_typedefs:135:14: Expected an identifier, but got 'with'.
typedef void with();
             ^^^^

parser/error_recovery/keyword_named_typedefs:136:9: Expected an identifier, but got 'with'.
typedef with = void Function();
        ^^^^

parser/error_recovery/keyword_named_typedefs:136:14: A typedef needs an explicit list of parameters.
typedef with = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:136:14: Expected ';' after this.
typedef with = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:136:14: Expected a declaration, but got '='.
typedef with = void Function();
             ^

parser/error_recovery/keyword_named_typedefs:136:31: Expected a function body or '=>'.
typedef with = void Function();
                              ^

beginCompilationUnit(typedef)
  beginMetadataStar(typedef)
  endMetadataStar(0)
  beginFunctionTypeAlias(typedef)
    handleVoidKeyword(void)
    handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'abstract' as a name here., null, {token: abstract}], abstract, abstract)
    handleIdentifier(abstract, typedefDeclaration)
    handleNoTypeVariables(()
    beginFormalParameters((, MemberKind.FunctionTypeAlias)
    endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
  endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
  handleNoType(typedef)
  handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'abstract' as a name here., null, {token: abstract}], abstract, abstract)
  handleIdentifier(abstract, typedefDeclaration)
  handleNoTypeVariables(=)
  handleRecoverableError(MissingTypedefParameters, =, =)
  beginFormalParameters((, MemberKind.FunctionTypeAlias)
  endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
  handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
  handleVoidKeyword(void)
  handleIdentifier(Function, topLevelFunctionDeclaration)
  handleNoTypeVariables(()
  beginFormalParameters((, MemberKind.TopLevelMethod)
  endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
  handleAsyncModifier(null, null)
  handleRecoverableError(ExpectedBody, ;, ;)
  handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'as' as a name here., null, {token: as}], as, as)
handleIdentifier(as, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'as' as a name here., null, {token: as}], as, as)
handleIdentifier(as, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
handleIdentifier(assert, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'assert'., null, {token: assert}], assert, assert)
handleIdentifier(assert, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(async, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(async, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(await, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(await, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
handleIdentifier(break, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'break'., null, {token: break}], break, break)
handleIdentifier(break, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
handleIdentifier(case, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'case'., null, {token: case}], case, case)
handleIdentifier(case, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
handleIdentifier(catch, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'catch'., null, {token: catch}], catch, catch)
handleIdentifier(catch, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(class)
handleRecoverableError(MissingTypedefParameters, class, class)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], class, class)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(class)
beginMetadataStar(class)
endMetadataStar(0)
beginClassOrNamedMixinApplicationPrelude(class)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
handleIdentifier(, classOrMixinDeclaration)
handleNoTypeVariables())
beginClassDeclaration(class, null, )
handleNoType()
handleClassExtends(null)
handleClassNoWithClause()
handleClassOrMixinImplements(null, 0)
handleClassHeader(class, class, null)
handleNoType()
handleClassExtends(null)
handleClassNoWithClause()
handleClassOrMixinImplements(null, 0)
handleRecoverClassHeader()
handleRecoverableError(Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}], ), ))
beginClassOrMixinBody(DeclarationKind.Class, {)
endClassOrMixinBody(DeclarationKind.Class, 0, {, })
endClassDeclaration(class, })
endTopLevelDeclaration())
beginMetadataStar())
endMetadataStar(0)
beginTopLevelMember())
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got ')'., null, {token: )}], ), ))
handleInvalidTopLevelDeclaration())
endTopLevelDeclaration(;)
beginMetadataStar(;)
endMetadataStar(0)
beginTopLevelMember(;)
handleRecoverableError(Message[UnexpectedToken, Unexpected token ';'., null, {token: ;}], ;, ;)
handleInvalidTopLevelDeclaration(;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'class'., null, {token: class}], class, class)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(class)
handleRecoverableError(MissingTypedefParameters, class, class)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], class, class)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(class)
beginMetadataStar(class)
endMetadataStar(0)
beginClassOrNamedMixinApplicationPrelude(class)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleIdentifier(, classOrMixinDeclaration)
handleNoTypeVariables(void)
beginClassDeclaration(class, null, )
handleNoType()
handleClassExtends(null)
handleClassNoWithClause()
handleClassOrMixinImplements(null, 0)
handleClassHeader(class, class, null)
handleNoType()
handleClassExtends(null)
handleClassNoWithClause()
handleClassOrMixinImplements(null, 0)
handleRecoverClassHeader()
handleRecoverableError(Message[ExpectedClassOrMixinBody, A class declaration must have a body, even if it is empty., Try adding an empty body., {string: class declaration}], void, void)
beginClassOrMixinBody(DeclarationKind.Class, {)
endClassOrMixinBody(DeclarationKind.Class, 0, {, })
endClassDeclaration(class, })
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(}, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(const)
handleRecoverableError(MissingTypedefParameters, const, const)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], const, const)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(const)
beginMetadataStar(const)
endMetadataStar(0)
beginTopLevelMember(const)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'const' here., Try removing 'const'., {token: const}], const, const)
beginTopLevelMethod(;, null)
handleNoType(const)
handleIdentifier(, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(const, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'const'., null, {token: const}], const, const)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(const)
handleRecoverableError(MissingTypedefParameters, const, const)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], const, const)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(const)
beginMetadataStar(const)
endMetadataStar(0)
beginTopLevelMember(const)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleNoType(const)
handleIdentifier(, topLevelVariableDeclaration)
beginFieldInitializer(=)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
handleIdentifier(, expression)
handleNoTypeArguments(void)
handleNoArguments(void)
handleSend(, void)
endFieldInitializer(=, void)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
endTopLevelFields(null, null, null, const, 1, const, ;)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(;, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
handleIdentifier(continue, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'continue'., null, {token: continue}], continue, continue)
handleIdentifier(continue, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'covariant' as a name here., null, {token: covariant}], covariant, covariant)
handleIdentifier(covariant, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'covariant' as a name here., null, {token: covariant}], covariant, covariant)
handleIdentifier(covariant, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
handleIdentifier(default, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'default'., null, {token: default}], default, default)
handleIdentifier(default, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'deferred' as a name here., null, {token: deferred}], deferred, deferred)
handleIdentifier(deferred, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'deferred' as a name here., null, {token: deferred}], deferred, deferred)
handleIdentifier(deferred, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
handleIdentifier(do, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'do'., null, {token: do}], do, do)
handleIdentifier(do, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'dynamic' as a name here., null, {token: dynamic}], dynamic, dynamic)
handleIdentifier(dynamic, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'dynamic' as a name here., null, {token: dynamic}], dynamic, dynamic)
handleIdentifier(dynamic, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
handleIdentifier(else, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'else'., null, {token: else}], else, else)
handleIdentifier(else, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(enum)
handleRecoverableError(MissingTypedefParameters, enum, enum)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], enum, enum)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(enum)
beginMetadataStar(enum)
endMetadataStar(0)
beginEnum(enum)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
handleIdentifier(, enumDeclaration)
handleRecoverableError(Message[ExpectedEnumBody, Expected a enum body, but got ')'., An enum definition must have a body with at least one constant name., {token: )}], ), ))
endEnum(enum, {, 0)
endTopLevelDeclaration())
beginMetadataStar())
endMetadataStar(0)
beginTopLevelMember())
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got ')'., null, {token: )}], ), ))
handleInvalidTopLevelDeclaration())
endTopLevelDeclaration(;)
beginMetadataStar(;)
endMetadataStar(0)
beginTopLevelMember(;)
handleRecoverableError(Message[UnexpectedToken, Unexpected token ';'., null, {token: ;}], ;, ;)
handleInvalidTopLevelDeclaration(;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'enum'., null, {token: enum}], enum, enum)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(enum)
handleRecoverableError(MissingTypedefParameters, enum, enum)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], enum, enum)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(enum)
beginMetadataStar(enum)
endMetadataStar(0)
beginEnum(enum)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleIdentifier(, enumDeclaration)
handleRecoverableError(Message[ExpectedEnumBody, Expected a enum body, but got 'void'., An enum definition must have a body with at least one constant name., {token: void}], void, void)
endEnum(enum, {, 0)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(}, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'export' as a name here., null, {token: export}], export, export)
handleIdentifier(export, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'export' as a name here., null, {token: export}], export, export)
handleIdentifier(export, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
handleIdentifier(extends, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'extends'., null, {token: extends}], extends, extends)
handleIdentifier(extends, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'extension' as a name here., null, {token: extension}], extension, extension)
handleIdentifier(extension, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'extension' as a name here., null, {token: extension}], extension, extension)
handleIdentifier(extension, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'external' as a name here., null, {token: external}], external, external)
handleIdentifier(external, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'external' as a name here., null, {token: external}], external, external)
handleIdentifier(external, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'factory' as a name here., null, {token: factory}], factory, factory)
handleIdentifier(factory, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'factory' as a name here., null, {token: factory}], factory, factory)
handleIdentifier(factory, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
handleIdentifier(false, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'false'., null, {token: false}], false, false)
handleIdentifier(false, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(final)
handleRecoverableError(MissingTypedefParameters, final, final)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], final, final)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(final)
beginMetadataStar(final)
endMetadataStar(0)
beginTopLevelMember(final)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
handleRecoverableError(Message[ExtraneousModifier, Can't have modifier 'final' here., Try removing 'final'., {token: final}], final, final)
beginTopLevelMethod(;, null)
handleNoType(final)
handleIdentifier(, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(final, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'final'., null, {token: final}], final, final)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(final)
handleRecoverableError(MissingTypedefParameters, final, final)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], final, final)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(final)
beginMetadataStar(final)
endMetadataStar(0)
beginTopLevelMember(final)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleNoType(final)
handleIdentifier(, topLevelVariableDeclaration)
beginFieldInitializer(=)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
handleIdentifier(, expression)
handleNoTypeArguments(void)
handleNoArguments(void)
handleSend(, void)
endFieldInitializer(=, void)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
endTopLevelFields(null, null, null, final, 1, final, ;)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(;, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
handleIdentifier(finally, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'finally'., null, {token: finally}], finally, finally)
handleIdentifier(finally, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
handleIdentifier(for, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'for'., null, {token: for}], for, for)
handleIdentifier(for, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'Function'., null, {token: Function}], Function, Function)
handleIdentifier(Function, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(Function, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'get' as a name here., null, {token: get}], get, get)
handleIdentifier(get, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'get' as a name here., null, {token: get}], get, get)
handleIdentifier(get, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(hide, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(hide, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
handleIdentifier(if, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'if'., null, {token: if}], if, if)
handleIdentifier(if, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'implements' as a name here., null, {token: implements}], implements, implements)
handleIdentifier(implements, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'implements' as a name here., null, {token: implements}], implements, implements)
handleIdentifier(implements, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'import' as a name here., null, {token: import}], import, import)
handleIdentifier(import, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'import' as a name here., null, {token: import}], import, import)
handleIdentifier(import, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
handleIdentifier(in, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'in'., null, {token: in}], in, in)
handleIdentifier(in, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(inout, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(inout, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'interface' as a name here., null, {token: interface}], interface, interface)
handleIdentifier(interface, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'interface' as a name here., null, {token: interface}], interface, interface)
handleIdentifier(interface, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
handleIdentifier(is, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'is'., null, {token: is}], is, is)
handleIdentifier(is, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'late' as a name here., null, {token: late}], late, late)
handleIdentifier(late, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'late' as a name here., null, {token: late}], late, late)
handleIdentifier(late, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'library' as a name here., null, {token: library}], library, library)
handleIdentifier(library, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'library' as a name here., null, {token: library}], library, library)
handleIdentifier(library, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'mixin' as a name here., null, {token: mixin}], mixin, mixin)
handleIdentifier(mixin, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'mixin' as a name here., null, {token: mixin}], mixin, mixin)
handleIdentifier(mixin, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(native, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(native, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
handleIdentifier(new, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'new'., null, {token: new}], new, new)
handleIdentifier(new, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
handleIdentifier(null, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'null'., null, {token: null}], null, null)
handleIdentifier(null, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(of, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(of, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(on, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(on, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'operator' as a name here., null, {token: operator}], operator, operator)
handleIdentifier(operator, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'operator' as a name here., null, {token: operator}], operator, operator)
handleIdentifier(operator, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(out, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(out, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'part' as a name here., null, {token: part}], part, part)
handleIdentifier(part, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'part' as a name here., null, {token: part}], part, part)
handleIdentifier(part, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(patch, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(patch, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'required' as a name here., null, {token: required}], required, required)
handleIdentifier(required, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'required' as a name here., null, {token: required}], required, required)
handleIdentifier(required, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
handleIdentifier(rethrow, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'rethrow'., null, {token: rethrow}], rethrow, rethrow)
handleIdentifier(rethrow, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
handleIdentifier(return, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'return'., null, {token: return}], return, return)
handleIdentifier(return, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'set' as a name here., null, {token: set}], set, set)
handleIdentifier(set, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'set' as a name here., null, {token: set}], set, set)
handleIdentifier(set, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(show, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(show, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(source, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(source, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'static' as a name here., null, {token: static}], static, static)
handleIdentifier(static, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'static' as a name here., null, {token: static}], static, static)
handleIdentifier(static, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
handleIdentifier(super, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'super'., null, {token: super}], super, super)
handleIdentifier(super, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
handleIdentifier(switch, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'switch'., null, {token: switch}], switch, switch)
handleIdentifier(switch, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(sync, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(sync, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
handleIdentifier(this, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'this'., null, {token: this}], this, this)
handleIdentifier(this, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
handleIdentifier(throw, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'throw'., null, {token: throw}], throw, throw)
handleIdentifier(throw, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
handleIdentifier(true, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'true'., null, {token: true}], true, true)
handleIdentifier(true, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
handleIdentifier(try, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'try'., null, {token: try}], try, try)
handleIdentifier(try, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'typedef' as a name here., null, {token: typedef}], typedef, typedef)
handleIdentifier(typedef, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[BuiltInIdentifierInDeclaration, Can't use 'typedef' as a name here., null, {token: typedef}], typedef, typedef)
handleIdentifier(typedef, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(var)
handleRecoverableError(MissingTypedefParameters, var, var)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], var, var)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(var)
beginMetadataStar(var)
endMetadataStar(0)
beginTopLevelMember(var)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
handleRecoverableError(VarReturnType, var, var)
beginTopLevelMethod(;, null)
handleNoType(var)
handleIdentifier(, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(var, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'var'., null, {token: var}], var, var)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(var)
handleRecoverableError(MissingTypedefParameters, var, var)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], var, var)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(var)
beginMetadataStar(var)
endMetadataStar(0)
beginTopLevelMember(var)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleNoType(var)
handleIdentifier(, topLevelVariableDeclaration)
beginFieldInitializer(=)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
handleIdentifier(, expression)
handleNoTypeArguments(void)
handleNoArguments(void)
handleSend(, void)
endFieldInitializer(=, void)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
endTopLevelFields(null, null, null, var, 1, var, ;)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(;, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'void'., null, {token: void}], void, void)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(void)
handleRecoverableError(MissingTypedefParameters, void, void)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], void, void)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '('., null, {token: (}], (, ()
beginTopLevelMethod(;, null)
handleVoidKeyword(void)
handleIdentifier(, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got '='., null, {token: =}], =, =)
handleIdentifier(, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
handleIdentifier(while, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'while'., null, {token: while}], while, while)
handleIdentifier(while, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
handleIdentifier(with, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleNoType(typedef)
handleRecoverableError(Message[ExpectedIdentifier, Expected an identifier, but got 'with'., null, {token: with}], with, with)
handleIdentifier(with, typedefDeclaration)
handleNoTypeVariables(=)
handleRecoverableError(MissingTypedefParameters, =, =)
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
handleRecoverableError(Message[ExpectedAfterButGot, Expected ';' after this., null, {string: ;}], =, =)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(=)
beginMetadataStar(=)
endMetadataStar(0)
beginTopLevelMember(=)
handleRecoverableError(Message[ExpectedDeclaration, Expected a declaration, but got '='., null, {token: =}], =, =)
handleInvalidTopLevelDeclaration(=)
endTopLevelDeclaration(void)
beginMetadataStar(void)
endMetadataStar(0)
beginTopLevelMember(void)
beginTopLevelMethod(=, null)
handleVoidKeyword(void)
handleIdentifier(Function, topLevelFunctionDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.TopLevelMethod)
endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
handleAsyncModifier(null, null)
handleRecoverableError(ExpectedBody, ;, ;)
handleEmptyFunctionBody(;)
endTopLevelMethod(void, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleVoidKeyword(void)
handleIdentifier(yield, typedefDeclaration)
handleNoTypeVariables(()
beginFormalParameters((, MemberKind.FunctionTypeAlias)
endFormalParameters(0, (, ), MemberKind.FunctionTypeAlias)
endFunctionTypeAlias(typedef, null, ;)
endTopLevelDeclaration(typedef)
beginMetadataStar(typedef)
endMetadataStar(0)
beginFunctionTypeAlias(typedef)
handleIdentifier(yield, typedefDeclaration)
handleNoTypeVariables(=)
handleNoTypeVariables(()
beginFunctionType(void)
handleVoidKeyword(void)
beginFormalParameters((, MemberKind.GeneralizedFunctionType)
endFormalParameters(0, (, ), MemberKind.GeneralizedFunctionType)
endFunctionType(Function, null)
endFunctionTypeAlias(typedef, =, ;)
endTopLevelDeclaration()
endCompilationUnit(258, )
