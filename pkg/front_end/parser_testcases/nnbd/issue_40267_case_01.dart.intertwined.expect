parseUnit(main)
  skipErrorTokens(main)
  listener: beginCompilationUnit(main)
  syntheticPreviousToken(main)
  parseTopLevelDeclarationImpl(, Instance of 'DirectiveContext')
    parseMetadataStar()
      listener: beginMetadataStar(main)
      listener: endMetadataStar(0)
    parseTopLevelMemberImpl()
      listener: beginTopLevelMember(main)
      parseTopLevelMethod(, null, , Instance of 'NoType', null, main)
        listener: beginTopLevelMethod(, null)
        listener: handleNoType()
        ensureIdentifier(, topLevelFunctionDeclaration)
          listener: handleIdentifier(main, topLevelFunctionDeclaration)
        parseMethodTypeVar(main)
          listener: handleNoTypeVariables(()
        parseGetterOrFormalParameters(main, main, false, MemberKind.TopLevelMethod)
          parseFormalParameters(main, MemberKind.TopLevelMethod)
            parseFormalParametersRest((, MemberKind.TopLevelMethod)
              listener: beginFormalParameters((, MemberKind.TopLevelMethod)
              listener: endFormalParameters(0, (, ), MemberKind.TopLevelMethod)
        parseAsyncModifierOpt())
          listener: handleAsyncModifier(null, null)
          inPlainSync()
        parseFunctionBody(), false, false)
          listener: beginBlockFunctionBody({)
          notEofOrValue(}, switch)
          parseStatement({)
            parseStatementX({)
              parseSwitchStatement({)
                listener: beginSwitchStatement(switch)
                ensureParenthesizedCondition(switch)
                  parseExpressionInParenthesisRest(()
                    parseExpression(()
                      parsePrecedenceExpression((, 1, true)
                        parseUnaryExpression((, true)
                          parsePrimary((, expression)
                            parseSendOrFunctionLiteral((, expression)
                              parseSend((, expression)
                                ensureIdentifier((, expression)
                                  listener: handleIdentifier(a, expression)
                                parseBangBeforeTypeArguments(a)
                                listener: handleNoTypeArguments())
                                parseArgumentsOpt(a)
                                  listener: handleNoArguments())
                                listener: handleSend(a, ))
                    ensureCloseParen(a, ()
                  listener: handleParenthesizedCondition(()
                parseSwitchBlock())
                  ensureBlock(), null, switch statement)
                  listener: beginSwitchBlock({)
                  notEofOrValue(}, case)
                  peekPastLabels(case)
                  listener: beginCaseExpression(case)
                  parseExpression(case)
                    parsePrecedenceExpression(case, 1, true)
                      parseUnaryExpression(case, true)
                        parsePrimary(case, expression)
                          parseSendOrFunctionLiteral(case, expression)
                            parseSend(case, expression)
                              ensureIdentifier(case, expression)
                                listener: handleIdentifier(b, expression)
                              parseBangBeforeTypeArguments(b)
                              listener: handleNoTypeArguments(?)
                              parseArgumentsOpt(b)
                                listener: handleNoArguments(?)
                              listener: handleSend(b, ?)
                      parseNullAwareBracketOrConditionalExpressionRest(b, Instance of 'NoTypeParamOrArg')
                        canParseAsConditional(?)
                          parseExpressionWithoutCascade(?)
                            parsePrecedenceExpression(?, 1, false)
                              parseUnaryExpression(?, false)
                                parsePrimary(?, expression)
                                  parseLiteralListSuffix(?, null)
                                    parseExpression([)
                                      parsePrecedenceExpression([, 1, true)
                                        parseUnaryExpression([, true)
                                          parsePrimary([, expression)
                                            parseSendOrFunctionLiteral([, expression)
                                              parseSend([, expression)
                                                ensureIdentifier([, expression)
                                                parseBangBeforeTypeArguments(c)
                                                parseArgumentsOpt(c)
                          parseExpressionWithoutCascade(:)
                            parsePrecedenceExpression(:, 1, false)
                              parseUnaryExpression(:, false)
                                parsePrimary(:, expression)
                                  parseSendOrFunctionLiteral(:, expression)
                                    parseSend(:, expression)
                                      ensureIdentifier(:, expression)
                                      parseBangBeforeTypeArguments(d)
                                      parseArgumentsOpt(d)
                        parseConditionalExpressionRest(b)
                          listener: beginConditionalExpression(?)
                          parseExpressionWithoutCascade(?)
                            parsePrecedenceExpression(?, 1, false)
                              parseUnaryExpression(?, false)
                                parsePrimary(?, expression)
                                  listener: handleNoTypeArguments([)
                                  parseLiteralListSuffix(?, null)
                                    parseExpression([)
                                      parsePrecedenceExpression([, 1, true)
                                        parseUnaryExpression([, true)
                                          parsePrimary([, expression)
                                            parseSendOrFunctionLiteral([, expression)
                                              parseSend([, expression)
                                                ensureIdentifier([, expression)
                                                  listener: handleIdentifier(c, expression)
                                                parseBangBeforeTypeArguments(c)
                                                listener: handleNoTypeArguments(])
                                                parseArgumentsOpt(c)
                                                  listener: handleNoArguments(])
                                                listener: handleSend(c, ])
                                    listener: handleLiteralList(1, [, null, ])
                          ensureColon(])
                          listener: handleConditionalExpressionColon()
                          parseExpressionWithoutCascade(:)
                            parsePrecedenceExpression(:, 1, false)
                              parseUnaryExpression(:, false)
                                parsePrimary(:, expression)
                                  parseSendOrFunctionLiteral(:, expression)
                                    parseSend(:, expression)
                                      ensureIdentifier(:, expression)
                                        listener: handleIdentifier(d, expression)
                                      parseBangBeforeTypeArguments(d)
                                      listener: handleNoTypeArguments(:)
                                      parseArgumentsOpt(d)
                                        listener: handleNoArguments(:)
                                      listener: handleSend(d, :)
                          listener: endConditionalExpression(?, :)
                  ensureColon(d)
                  listener: endCaseExpression(:)
                  listener: handleCaseMatch(case, :)
                  peekPastLabels(e)
                  parseStatementsInSwitchCase(:, e, case, 0, 1, null, null)
                    listener: beginSwitchCase(0, 1, case)
                    parseStatement(:)
                      parseStatementX(:)
                        parseExpressionStatementOrDeclarationAfterModifiers(:, :, null, null, null, false)
                          looksLikeLocalFunction(e)
                          parseExpressionStatement(:)
                            parseExpression(:)
                              parsePrecedenceExpression(:, 1, true)
                                parseUnaryExpression(:, true)
                                  parsePrimary(:, expression)
                                    parseSendOrFunctionLiteral(:, expression)
                                      parseSend(:, expression)
                                        ensureIdentifier(:, expression)
                                          listener: handleIdentifier(e, expression)
                                        parseBangBeforeTypeArguments(e)
                                        listener: handleNoTypeArguments(;)
                                        parseArgumentsOpt(e)
                                          listener: handleNoArguments(;)
                                        listener: handleSend(e, ;)
                            ensureSemicolon(e)
                            listener: handleExpressionStatement(;)
                    peekPastLabels(})
                    listener: endSwitchCase(0, 1, null, null, 1, case, })
                  notEofOrValue(}, })
                  listener: endSwitchBlock(1, {, })
                listener: endSwitchStatement(switch, })
          notEofOrValue(}, })
          listener: endBlockFunctionBody(1, {, })
        listener: endTopLevelMethod(main, null, })
  listener: endTopLevelDeclaration()
  reportAllErrorTokens(main)
  listener: endCompilationUnit(1, )
