library;
import self as self;
import "dart:core" as core;

abstract class A extends core::Object {
  synthetic constructor •() → self::A
    : super core::Object::•()
    ;
  method noSuchMethod(core::Invocation i) → dynamic
    return null;
  abstract method foo() → void;
}
class B extends self::A {
  synthetic constructor •() → self::B
    : super self::A::•()
    ;
  no-such-method-forwarder method foo() → void
    return this.{self::A::noSuchMethod}(new core::_InvocationMirror::_withType(#C1, 0, #C2, #C3, core::Map::unmodifiable<core::Symbol, dynamic>(#C4)));
}
static method main() → dynamic {}
