library;
import self as self;
import "dart:core" as core;

class Class extends core::Object {
  field self::Class? field = null;
  synthetic constructor •() → self::Class*
    : super core::Object::•()
    ;
  method method() → self::Class?
    return this.{self::Class::field};
  operator [](self::Class? key) → self::Class?
    return this.{self::Class::field};
  operator []=(self::Class? key, self::Class? value) → void {
    this.{self::Class::field} = value;
  }
  operator +(core::int value) → self::Class?
    return this.{self::Class::field};
  operator unary-() → self::Class?
    return this.{self::Class::field};
}
static method main() → dynamic {
  self::propertyAccess(null);
  self::indexAccess(null);
  self::operatorAccess(null);
  self::ifNull(null);
}
static method propertyAccess(self::Class? c) → void {
  let final self::Class? #t1 = c in #t1.{core::Object::==}(null) ?{self::Class?} null : #t1{self::Class}.{self::Class::field};
  let final self::Class? #t2 = c in #t2.{core::Object::==}(null) ?{self::Class} null : #t2{self::Class}.{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t3 = c in #t3.{core::Object::==}(null) ?{self::Class} null : #t3{self::Class}.{self::Class::field} = new self::Class::•();
  let final self::Class #t4 = c{self::Class} in #t4.{core::Object::==}(null) ?{self::Class?} null : #t4.{self::Class::method}();
  let final self::Class #t5 = c{self::Class} in #t5.{core::Object::==}(null) ?{self::Class?} null : #t5.{self::Class::field}.{self::Class::field};
  let final self::Class #t6 = c{self::Class} in #t6.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t7 = #t6.{self::Class::field} in #t7.{core::Object::==}(null) ?{self::Class?} null : #t7{self::Class}.{self::Class::field};
  let final self::Class #t8 = c{self::Class} in #t8.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t9 = #t8.{self::Class::field}.{self::Class::field} in #t9.{core::Object::==}(null) ?{self::Class?} null : #t9{self::Class}.{self::Class::field};
  let final self::Class #t10 = c{self::Class} in #t10.{core::Object::==}(null) ?{self::Class} null : #t10.{self::Class::field}.{self::Class::field} = new self::Class::•();
  let final self::Class #t11 = c{self::Class} in #t11.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t12 = #t11.{self::Class::field} in #t12.{core::Object::==}(null) ?{self::Class} null : #t12{self::Class}.{self::Class::field} = new self::Class::•();
  let final self::Class #t13 = c{self::Class} in #t13.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t14 = #t13.{self::Class::field}.{self::Class::field} in #t14.{core::Object::==}(null) ?{self::Class} null : #t14{self::Class}.{self::Class::field} = new self::Class::•();
  self::throws(() → self::Class? => (let final self::Class? #t15 = c in #t15.{core::Object::==}(null) ?{self::Class?} null : #t15{self::Class}.{self::Class::field}).{self::Class::field});
  self::throws(() → self::Class? => (let final self::Class? #t16 = c in #t16.{core::Object::==}(null) ?{self::Class} null : #t16{self::Class}.{self::Class::field} = new self::Class::•()).{self::Class::field});
  self::throws(() → self::Class? => (let final self::Class? #t17 = c in #t17.{core::Object::==}(null) ?{self::Class?} null : #t17{self::Class}.{self::Class::method}()).{self::Class::field});
  c = let final self::Class #t18 = c{self::Class} in #t18.{core::Object::==}(null) ?{self::Class} null : #t18.{self::Class::field}.{self::Class::field} = new self::Class::•();
  c = let final self::Class #t19 = c{self::Class} in #t19.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t20 = #t19.{self::Class::field} in #t20.{core::Object::==}(null) ?{self::Class} null : #t20{self::Class}.{self::Class::field} = new self::Class::•();
  c = let final self::Class #t21 = c{self::Class} in #t21.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t22 = #t21.{self::Class::field}.{self::Class::field} in #t22.{core::Object::==}(null) ?{self::Class} null : #t22{self::Class}.{self::Class::field} = new self::Class::•();
  let final self::Class #t23 = c{self::Class} in #t23.{core::Object::==}(null) ?{self::Class?} null : #t23.{self::Class::field}.{self::Class::method}();
  let final self::Class #t24 = c{self::Class} in #t24.{core::Object::==}(null) ?{self::Class?} null : #t24.{self::Class::field} = new self::Class::•().{self::Class::field};
  c = let final self::Class #t25 = c{self::Class} in #t25.{core::Object::==}(null) ?{self::Class?} null : #t25.{self::Class::field} = new self::Class::•().{self::Class::field};
  let final self::Class? #t26 = c in #t26.{core::Object::==}(null) ?{self::Class} null : #t26{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t27 = c in #t27.{core::Object::==}(null) ?{self::Class} null : #t27{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  let final self::Class #t28 = c{self::Class} in #t28.{core::Object::==}(null) ?{self::Class?} null : #t28.{self::Class::field} = new self::Class::•().{self::Class::method}();
  c = let final self::Class #t29 = c{self::Class} in #t29.{core::Object::==}(null) ?{self::Class?} null : #t29.{self::Class::field} = new self::Class::•().{self::Class::method}();
  let final self::Class? #t30 = c in #t30.{core::Object::==}(null) ?{self::Class?} null : #t30{self::Class}.{self::Class::method}().{self::Class::field};
  let final self::Class? #t31 = c in #t31.{core::Object::==}(null) ?{self::Class} null : #t31{self::Class}.{self::Class::method}().{self::Class::field} = new self::Class::•();
  let final self::Class? #t32 = c in #t32.{core::Object::==}(null) ?{self::Class?} null : #t32{self::Class}.{self::Class::method}().{self::Class::method}();
  let final self::Class? #t33 = c in #t33.{core::Object::==}(null) ?{self::Class?} null : #t33{self::Class}.{self::Class::field}.{self::Class::field}.{self::Class::field};
  let final self::Class? #t34 = c in #t34.{core::Object::==}(null) ?{self::Class} null : #t34{self::Class}.{self::Class::field}.{self::Class::field}.{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t35 = c in #t35.{core::Object::==}(null) ?{self::Class} null : #t35{self::Class}.{self::Class::field}.{self::Class::field}.{self::Class::field} = new self::Class::•();
  let final self::Class #t36 = c{self::Class} in #t36.{core::Object::==}(null) ?{self::Class?} null : #t36.{self::Class::field}.{self::Class::field}.{self::Class::method}();
  let final self::Class #t37 = c{self::Class} in #t37.{core::Object::==}(null) ?{self::Class?} null : #t37.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::field};
  c = let final self::Class #t38 = c{self::Class} in #t38.{core::Object::==}(null) ?{self::Class?} null : #t38.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::field};
  let final self::Class? #t39 = c in #t39.{core::Object::==}(null) ?{self::Class} null : #t39{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t40 = c in #t40.{core::Object::==}(null) ?{self::Class} null : #t40{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::field} = new self::Class::•();
  let final self::Class #t41 = c{self::Class} in #t41.{core::Object::==}(null) ?{self::Class?} null : #t41.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::method}();
  c = let final self::Class #t42 = c{self::Class} in #t42.{core::Object::==}(null) ?{self::Class?} null : #t42.{self::Class::field} = new self::Class::•().{self::Class::field}.{self::Class::method}();
  let final self::Class? #t43 = c in #t43.{core::Object::==}(null) ?{self::Class?} null : #t43{self::Class}.{self::Class::method}().{self::Class::field}.{self::Class::field};
  let final self::Class? #t44 = c in #t44.{core::Object::==}(null) ?{self::Class} null : #t44{self::Class}.{self::Class::method}().{self::Class::field}.{self::Class::field} = new self::Class::•();
  let final self::Class? #t45 = c in #t45.{core::Object::==}(null) ?{self::Class?} null : #t45{self::Class}.{self::Class::method}().{self::Class::field}.{self::Class::method}();
  let final self::Class? #t46 = c in #t46.{core::Object::==}(null) ?{self::Class?} null : #t46{self::Class}.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::field};
  c = let final self::Class? #t47 = c in #t47.{core::Object::==}(null) ?{self::Class?} null : #t47{self::Class}.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::field};
  let final self::Class? #t48 = c in #t48.{core::Object::==}(null) ?{self::Class} null : #t48{self::Class}.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t49 = c in #t49.{core::Object::==}(null) ?{self::Class} null : #t49{self::Class}.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  let final self::Class #t50 = c{self::Class} in #t50.{core::Object::==}(null) ?{self::Class?} null : #t50.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::method}();
  c = let final self::Class #t51 = c{self::Class} in #t51.{core::Object::==}(null) ?{self::Class?} null : #t51.{self::Class::field}.{self::Class::field} = new self::Class::•().{self::Class::method}();
  let final self::Class? #t52 = c in #t52.{core::Object::==}(null) ?{self::Class?} null : #t52{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::field};
  c = let final self::Class? #t53 = c in #t53.{core::Object::==}(null) ?{self::Class?} null : #t53{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::field};
  let final self::Class? #t54 = c in #t54.{core::Object::==}(null) ?{self::Class} null : #t54{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t55 = c in #t55.{core::Object::==}(null) ?{self::Class} null : #t55{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  let final self::Class #t56 = c{self::Class} in #t56.{core::Object::==}(null) ?{self::Class?} null : #t56.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::method}();
  c = let final self::Class #t57 = c{self::Class} in #t57.{core::Object::==}(null) ?{self::Class?} null : #t57.{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•().{self::Class::method}();
  let final self::Class? #t58 = c in #t58.{core::Object::==}(null) ?{self::Class?} null : #t58{self::Class}.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::field};
  c = let final self::Class? #t59 = c in #t59.{core::Object::==}(null) ?{self::Class?} null : #t59{self::Class}.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::field};
  let final self::Class? #t60 = c in #t60.{core::Object::==}(null) ?{self::Class} null : #t60{self::Class}.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t61 = c in #t61.{core::Object::==}(null) ?{self::Class} null : #t61{self::Class}.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::field} = new self::Class::•();
  let final self::Class #t62 = c{self::Class} in #t62.{core::Object::==}(null) ?{self::Class?} null : #t62.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::method}();
  c = let final self::Class #t63 = c{self::Class} in #t63.{core::Object::==}(null) ?{self::Class?} null : #t63.{self::Class::method}().{self::Class::field} = new self::Class::•().{self::Class::method}();
  let final self::Class? #t64 = c in #t64.{core::Object::==}(null) ?{self::Class?} null : #t64{self::Class}.{self::Class::field}.{self::Class::method}().{self::Class::field};
  let final self::Class? #t65 = c in #t65.{core::Object::==}(null) ?{self::Class} null : #t65{self::Class}.{self::Class::field}.{self::Class::method}().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t66 = c in #t66.{core::Object::==}(null) ?{self::Class} null : #t66{self::Class}.{self::Class::field}.{self::Class::method}().{self::Class::field} = new self::Class::•();
  let final self::Class #t67 = c{self::Class} in #t67.{core::Object::==}(null) ?{self::Class?} null : #t67.{self::Class::field}.{self::Class::method}().{self::Class::method}();
  let final self::Class #t68 = c{self::Class} in #t68.{core::Object::==}(null) ?{self::Class?} null : #t68.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::field};
  c = let final self::Class #t69 = c{self::Class} in #t69.{core::Object::==}(null) ?{self::Class?} null : #t69.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::field};
  let final self::Class? #t70 = c in #t70.{core::Object::==}(null) ?{self::Class} null : #t70{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::field} = new self::Class::•();
  c = let final self::Class? #t71 = c in #t71.{core::Object::==}(null) ?{self::Class} null : #t71{self::Class}.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::field} = new self::Class::•();
  let final self::Class #t72 = c{self::Class} in #t72.{core::Object::==}(null) ?{self::Class?} null : #t72.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::method}();
  c = let final self::Class #t73 = c{self::Class} in #t73.{core::Object::==}(null) ?{self::Class?} null : #t73.{self::Class::field} = new self::Class::•().{self::Class::method}().{self::Class::method}();
  let final self::Class? #t74 = c in #t74.{core::Object::==}(null) ?{self::Class?} null : #t74{self::Class}.{self::Class::method}().{self::Class::method}().{self::Class::field};
  let final self::Class? #t75 = c in #t75.{core::Object::==}(null) ?{self::Class} null : #t75{self::Class}.{self::Class::method}().{self::Class::method}().{self::Class::field} = new self::Class::•();
  let final self::Class? #t76 = c in #t76.{core::Object::==}(null) ?{self::Class?} null : #t76{self::Class}.{self::Class::method}().{self::Class::method}().{self::Class::method}();
}
static method indexAccess(self::Class? c) → void {
  let final self::Class? #t77 = c in #t77.{core::Object::==}(null) ?{self::Class?} null : #t77{self::Class}.{self::Class::[]}(c{self::Class});
  let final self::Class? #t78 = c in #t78.{core::Object::==}(null) ?{self::Class} null : #t78{self::Class}.{self::Class::[]=}(c{self::Class}, new self::Class::•());
  let final self::Class? #t79 = c in #t79.{core::Object::==}(null) ?{self::Class?} null : #t79{self::Class}.{self::Class::[]}(c{self::Class}).{self::Class::method}();
  let final self::Class? #t80 = c in #t80.{core::Object::==}(null) ?{self::Class?} null : #t80{self::Class}.{self::Class::field}.{self::Class::[]}(c{self::Class});
  let final self::Class? #t81 = c in #t81.{core::Object::==}(null) ?{self::Class} null : #t81{self::Class}.{self::Class::field}.{self::Class::[]=}(c{self::Class}, new self::Class::•());
  c = let final self::Class? #t82 = c in #t82.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t83 = #t82{self::Class}.{self::Class::field} in let final self::Class #t84 = c{self::Class} in let final self::Class #t85 = new self::Class::•() in let final void #t86 = #t83.{self::Class::[]=}(#t84, #t85) in #t85;
  let final self::Class #t87 = c{self::Class} in #t87.{core::Object::==}(null) ?{self::Class?} null : #t87.{self::Class::field}.{self::Class::[]}(c{self::Class}).{self::Class::method}();
  let final self::Class #t88 = c{self::Class} in #t88.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t89 = #t88.{self::Class::field} in let final self::Class #t90 = c{self::Class} in #t89.{self::Class::[]=}(#t90, #t89.{self::Class::[]}(#t90).{self::Class::+}(0));
  c = let final self::Class #t91 = c{self::Class} in #t91.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t92 = #t91.{self::Class::field} in let final self::Class #t93 = c{self::Class} in let final self::Class? #t94 = #t92.{self::Class::[]}(#t93).{self::Class::+}(0) in let final void #t95 = #t92.{self::Class::[]=}(#t93, #t94) in #t94;
  let final self::Class? #t96 = c in #t96.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t97 = #t96{self::Class}.{self::Class::field} in let final self::Class #t98 = c{self::Class} in #t97.{self::Class::[]=}(#t98, #t97.{self::Class::[]}(#t98).{self::Class::+}(1));
  c = let final self::Class? #t99 = c in #t99.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t100 = #t99{self::Class}.{self::Class::field} in let final self::Class #t101 = c{self::Class} in let final self::Class? #t102 = #t100.{self::Class::[]}(#t101) in let final void #t103 = #t100.{self::Class::[]=}(#t101, #t102.{self::Class::+}(1)) in #t102;
  let final self::Class? #t104 = c in #t104.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t105 = #t104{self::Class}.{self::Class::field} in let final self::Class #t106 = c{self::Class} in let final self::Class? #t107 = #t105.{self::Class::[]}(#t106).{self::Class::+}(1) in let final void #t108 = #t105.{self::Class::[]=}(#t106, #t107) in #t107;
  c = let final self::Class? #t109 = c in #t109.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t110 = #t109{self::Class}.{self::Class::field} in let final self::Class #t111 = c{self::Class} in let final self::Class? #t112 = #t110.{self::Class::[]}(#t111).{self::Class::+}(1) in let final void #t113 = #t110.{self::Class::[]=}(#t111, #t112) in #t112;
}
static method operatorAccess(self::Class? c) → void {
  self::throws(() → self::Class? => (let final self::Class? #t114 = c in #t114.{core::Object::==}(null) ?{self::Class?} null : #t114{self::Class}.{self::Class::field}).{self::Class::+}(0));
  self::throws(() → self::Class? => (let final self::Class? #t115 = c in #t115.{core::Object::==}(null) ?{self::Class?} null : #t115{self::Class}.{self::Class::field}).{self::Class::unary-}());
  let final self::Class? #t116 = c in #t116.{core::Object::==}(null) ?{self::Class?} null : #t116.{self::Class::field} = #t116.{self::Class::field}.{self::Class::+}(0);
  c = let final self::Class? #t117 = c in #t117.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t118 = #t117.{self::Class::field}.{self::Class::+}(0) in let final void #t119 = #t117.{self::Class::field} = #t118 in #t118;
  let final self::Class? #t120 = c in #t120.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t121 = #t120{self::Class}.{self::Class::field} in #t121.{self::Class::field} = #t121.{self::Class::field}.{self::Class::+}(0);
  c = let final self::Class? #t122 = c in #t122.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t123 = #t122{self::Class}.{self::Class::field} in #t123.{self::Class::field} = #t123.{self::Class::field}.{self::Class::+}(0);
  let final self::Class? #t124 = c in #t124.{core::Object::==}(null) ?{self::Class?} null : #t124.{self::Class::field} = #t124.{self::Class::field}.{self::Class::+}(1);
  c = let final self::Class? #t125 = c in #t125.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t126 = #t125.{self::Class::field} in let final void #t127 = #t125.{self::Class::field} = #t126.{self::Class::+}(1) in #t126;
  let final self::Class? #t128 = c in #t128.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t129 = #t128.{self::Class::field}.{self::Class::+}(1) in let final void #t130 = #t128.{self::Class::field} = #t129 in #t129;
  c = let final self::Class? #t131 = c in #t131.{core::Object::==}(null) ?{self::Class?} null : let final self::Class? #t132 = #t131.{self::Class::field}.{self::Class::+}(1) in let final void #t133 = #t131.{self::Class::field} = #t132 in #t132;
}
static method ifNull(self::Class? c) → void {
  let final self::Class? #t134 = c in #t134.{core::Object::==}(null) ?{self::Class} null : #t134.{self::Class::field}.{core::Object::==}(null) ?{self::Class} #t134.{self::Class::field} = c{self::Class} : null;
  c = let final self::Class? #t135 = c in #t135.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t136 = #t135.{self::Class::field} in #t136.{core::Object::==}(null) ?{self::Class} #t135.{self::Class::field} = c{self::Class} : #t136;
  let final self::Class #t137 = c{self::Class} in #t137.{core::Object::==}(null) ?{self::Class} null : let final self::Class? #t138 = #t137.{self::Class::field} in let final self::Class #t139 = c{self::Class} in #t138.{self::Class::[]}(#t139).{core::Object::==}(null) ?{self::Class} #t138.{self::Class::[]=}(#t139, c{self::Class}) : null;
}
static method throws(() → void f) → void {
  try {
    f.call();
  }
  on dynamic catch(final dynamic _) {
    return;
  }
  throw "Expected exception.";
}
