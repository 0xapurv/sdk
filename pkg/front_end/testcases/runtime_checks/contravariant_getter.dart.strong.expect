library test;
import self as self;
import "dart:core" as core;

typedef F<contravariant T extends core::Object* = dynamic> = (T*) →* void;
class C<T extends core::Object* = dynamic> extends core::Object {
  field (self::C::T*) →* void y = null;
  synthetic constructor •() → self::C<self::C::T*>*
    : super core::Object::•()
    ;
  method f(generic-covariant-impl self::C::T* value) → void {
    let final self::C<self::C::T*>* #t1 = this in let final self::C::T* #t2 = value in (#t1.{self::C::y} as{TypeError,CovarianceCheck} (self::C::T*) →* void).call(#t2);
  }
}
static method g(self::C<core::num*>* c) → void {
  let final self::C<core::num*>* #t3 = c in let final core::double* #t4 = 1.5 in (#t3.{self::C::y} as{TypeError,CovarianceCheck} (core::num*) →* void).call(#t4);
}
static method main() → void {}
